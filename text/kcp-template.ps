%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Title: kcp-template.dvi
%%Pages: 15
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: Times-Roman Times-Bold Times-Italic
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips kcp-template.dvi -o
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2005.01.06:1243
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro
%!
% PostScript prologue for pstricks.tex.
% Version 97 patch 3, 98/06/01
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Atan { /atan load stopped { pop pop 0 } if } def
/Div { dup 0 eq { pop } { div } ifelse } def
/NET { neg exch neg exch T } def
/Pyth { dup mul exch dup mul add sqrt } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def }
def
/PathLength { flattenpath /z 0 def { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
} { /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
/pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
0 } ifelse setdash stroke } def
/DotLine { /b PathLength def /a ED /z ED /y CLW def /z y z add def a 0 gt
{ /b b a div def } { a 0 eq { /b b y sub def } { a -3 eq { /b b y add
def } if } ifelse } ifelse [ 0 b b z Div round Div dup 0 le { pop 1 } if
] a 0 gt { 0 } { y 2 div a -2 gt { neg } if } ifelse setdash 1
setlinecap stroke } def
/LineFill { gsave abs CLW add /a ED a 0 dtransform round exch round exch
2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
% DG/SR modification end
Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
% def
a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
pop pop } def
% DG/SR modification end
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { { /z DS def } { /z 0 def } ifelse /b ED 0 z DS SD b { 0 z DS
CLW sub SD } if 0 DS z add CLW 4 div sub moveto } def
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
/closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
load } if ] cvx newpath 3 1 roll T exec } def
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop } if
f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/Line { NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub
def n { Lineto } repeat CP 4 2 roll ArrowB L pop pop } if } def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
Lineto pop pop closepath } ifelse } def
/Diamond { /mtrx CM def T rotate /h ED /w ED dup 0 eq { pop } { CLW mul
neg /d ED /a w h Atan def /h d a sin Div h add def /w d a cos Div w add
def } ifelse mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2
div /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { NArray n 3 lt { n { pop pop } repeat } { BOC /n n 3 sub def
n { NC } repeat EOC } ifelse } def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro
%!PS-Adobe-2.0
%%Title: Dot Font for PSTricks 97 - Version 97, 93/05/07.
%%Creator: Timothy Van Zandt <tvz@Princeton.EDU>
%%Creation Date: May 7, 1993
10 dict dup begin
  /FontType 3 def
  /FontMatrix [ .001 0 0 .001 0 0 ] def
  /FontBBox [ 0 0 0 0 ] def
  /Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    (P) 0 get /BoldPentagon put
  /Metrics 13 dict def
  Metrics begin
    /Bullet 1000 def
    /Circle 1000 def
    /BoldCircle 1000 def
    /SolidTriangle 1344 def
    /Triangle 1344 def
    /BoldTriangle 1344 def
    /SolidSquare 886 def
    /Square 886 def
    /BoldSquare 886 def
    /SolidPentagon 1093.2 def
    /Pentagon 1093.2 def
    /BoldPentagon 1093.2 def
    /.notdef 0 def
  end
  /BBoxes 13 dict def
  BBoxes begin
    /Circle { -550 -550 550 550 } def
    /BoldCircle /Circle load def
    /Bullet /Circle load def
    /Triangle { -571.5 -330 571.5 660 } def
    /BoldTriangle /Triangle load def
    /SolidTriangle /Triangle load def
    /Square { -450 -450 450 450 } def
    /BoldSquare /Square load def
    /SolidSquare /Square load def
    /Pentagon { -546.6 -465 546.6 574.7 } def
    /BoldPentagon /Pentagon load def
    /SolidPentagon /Pentagon load def
    /.notdef { 0 0 0 0 } def
  end
  /CharProcs 20 dict def
  CharProcs begin
    /Adjust {
      2 copy dtransform floor .5 add exch floor .5 add exch idtransform
      3 -1 roll div 3 1 roll exch div exch scale
    } def
    /CirclePath { 0 0 500 0 360 arc closepath } def
    /Bullet { 500 500 Adjust CirclePath fill } def
    /Circle { 500 500 Adjust CirclePath .9 .9 scale CirclePath eofill } def
    /BoldCircle { 500 500 Adjust CirclePath .8 .8 scale CirclePath eofill } def
    /BoldCircle { CirclePath .8 .8 scale CirclePath eofill } def
    /TrianglePath {
      0  660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath
    } def
    /SolidTriangle { TrianglePath fill } def
    /Triangle { TrianglePath .85 .85 scale TrianglePath eofill } def
    /BoldTriangle { TrianglePath .7 .7 scale TrianglePath eofill } def
    /SquarePath {
      -450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto
      closepath
    } def
    /SolidSquare { SquarePath fill } def
    /Square { SquarePath .89 .89 scale SquarePath eofill } def
    /BoldSquare { SquarePath .78 .78 scale SquarePath eofill } def
    /PentagonPath {
      -337.8 -465   moveto
       337.8 -465   lineto
       546.6  177.6 lineto
         0    574.7 lineto
      -546.6  177.6 lineto
      closepath
    } def
    /SolidPentagon { PentagonPath fill } def
    /Pentagon { PentagonPath .89 .89 scale PentagonPath eofill } def
    /BoldPentagon { PentagonPath .78 .78 scale PentagonPath eofill } def
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
      Metrics 1 index get exec 0
      BBoxes 3 index get exec
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop
% END pst-dots.pro

%%EndProcSet
%%BeginProcSet: pst-node.pro
%!
% PostScript prologue for pst-node.tex.
% Version 97 patch 1, 97/05/09.
% For distribution, see pstricks.tex.
%
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin /T /translate load def end
/NewNode { gsave /next ED dict dup 3 1 roll def exch { dup 3 1 roll def }
if begin tx@Dict begin STV CP T exec end /NodeMtrx CM def next end
grestore } def
/InitPnode { /Y ED /X ED /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
/InitCnode { /r ED /Y ED /X ED /NodePos { NodeSep r add dup Cos mul exch
Sin mul } def } def
/GetRnodePos { Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def
} ifelse Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def }
ifelse dx Sin mul abs dy Cos mul abs gt { dy Cos mul Sin div dy } { dx
dup Sin mul Cos Div } ifelse } def
/InitRnode { /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub
/u ED /NodePos { GetRnodePos } def } def
/DiaNodePos { w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
Cos mul exch Sin mul } def
/TriNodePos { Sin s lt { d NodeSep sub dup Cos mul Sin Div exch } { w h
mul w Sin mul h Cos abs mul add Div NodeSep add dup Cos mul exch Sin mul
} ifelse } def
/InitTriNode { sub 2 div exch 2 div exch 2 copy T 2 copy 4 index index /d
ED pop pop pop pop -90 mul rotate /NodeMtrx CM def /X 0 def /Y 0 def d
sub abs neg /d ED d add /h ED 2 div h mul h d sub Div /w ED /s d w Atan
sin def /NodePos { TriNodePos } def } def
/OvalNodePos { /ww w NodeSep add def /hh h NodeSep add def Sin ww mul Cos
hh mul Atan dup cos ww mul exch sin hh mul } def
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
/XYPos { dup sin exch cos Do /Cos ED /Sin ED /Dist ED Cos 0 gt { Dist
Dist Sin mul Cos div } { Cos 0 lt { Dist neg Dist Sin mul Cos div neg }
{ 0 Dist Sin mul } ifelse } ifelse Do } def
/GetEdge { dup 0 eq { pop begin 1 0 NodeMtrx dtransform CM idtransform
exch atan sub dup sin /Sin ED cos /Cos ED /NodeSep ED NodePos NodeMtrx
dtransform CM idtransform end } { 1 eq {{exch}} {{}} ifelse /Do ED pop
XYPos } ifelse } def
/AddOffset { 1 index 0 eq { pop pop } { 2 copy 5 2 roll cos mul add 4 1
roll sin mul sub exch } ifelse } def
/GetEdgeA { NodeSepA AngleA NodeA NodeSepTypeA GetEdge OffsetA AngleA
AddOffset yA add /yA1 ED xA add /xA1 ED } def
/GetEdgeB { NodeSepB AngleB NodeB NodeSepTypeB GetEdge OffsetB AngleB
AddOffset yB add /yB1 ED xB add /xB1 ED } def
/GetArmA { ArmTypeA 0 eq { /xA2 ArmA AngleA cos mul xA1 add def /yA2 ArmA
AngleA sin mul yA1 add def } { ArmTypeA 1 eq {{exch}} {{}} ifelse /Do ED
ArmA AngleA XYPos OffsetA AngleA AddOffset yA add /yA2 ED xA add /xA2 ED
} ifelse } def
/GetArmB { ArmTypeB 0 eq { /xB2 ArmB AngleB cos mul xB1 add def /yB2 ArmB
AngleB sin mul yB1 add def } { ArmTypeB 1 eq {{exch}} {{}} ifelse /Do ED
ArmB AngleB XYPos OffsetB AngleB AddOffset yB add /yB2 ED xB add /xB2 ED
} ifelse } def
/InitNC { /b ED /a ED /NodeSepTypeB ED /NodeSepTypeA ED /NodeSepB ED
/NodeSepA ED /OffsetB ED /OffsetA ED tx@NodeDict a known tx@NodeDict b
known and dup { /NodeA a load def /NodeB b load def NodeA GetCenter /yA
ED /xA ED NodeB GetCenter /yB ED /xB ED } if } def
/LPutLine { 4 copy 3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 1 t sub
mul 3 1 roll 1 t sub mul 4 1 roll t mul add /Y ED t mul add /X ED } def
/LPutLines { mark LPutVar counttomark 2 div 1 sub /n ED t floor dup n gt
{ pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse cvi 2 mul { pop
} repeat LPutLine cleartomark } def
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
/NCAngles { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform pop xB2 yB2 mtrx transform exch pop mtrx
itransform /y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA2
yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end /LPutVar [ xB1
yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def /LPutPos { LPutLines } def
/HPutPos { HPutLines } def /VPutPos { VPutLines } def } def
/NCAngle { GetEdgeA GetEdgeB GetArmB /mtrx AngleA matrix rotate def xB2
yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
/y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA1 yA1
tx@Dict begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCBar { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate def
xA2 yA2 mtrx itransform pop xB2 yB2 mtrx itransform pop sub dup 0 mtrx
transform 3 -1 roll 0 gt { /yB2 exch yB2 add def /xB2 exch xB2 add def }
{ /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse mark ArmB
0 ne { xB1 yB1 } if xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict
begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx
def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCDiag { GetEdgeA GetEdgeB GetArmA GetArmB mark ArmB 0 ne { xB1 yB1 } if
xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end
/LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCDiagg { GetEdgeA GetArmA yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
GetEdgeB mark xB1 yB1 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin
false Line end /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCLoop { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED /xB3 xB2 yB2
mtrx transform pop def xB3 yA3 mtrx itransform /yB3 ED /xB3 ED xA3 yA3
mtrx itransform /yA3 ED /xA3 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2
xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false
Line end /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
/NCCircle { NodeSepA 0 NodeA 0 GetEdge pop 2 div dup 2 exp r
r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
mul add dup 5 1 roll 90 sub PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
% DG/SR modification end
} def /HPutPos { LPutPos } def /VPutPos { LPutPos } def r AngleA 90 sub a add
AngleA 270 add a sub tx@Dict begin /angleB ED /angleA ED /r ED /c 57.2957 r
Div def /y ED /x ED } def
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
/LPutCoor { NAngle tx@Dict begin /NAngle ED end gsave CM STV CP Y sub neg
exch X sub neg exch moveto setmatrix CP grestore } def
/LPut { tx@NodeDict /LPutPos known { LPutPos } { CP /Y ED /X ED /NAngle 0
def } ifelse LPutCoor  } def
/HPutAdjust { Sin Cos mul 0 eq { 0 } { d Cos mul Sin div flag not { neg }
if h Cos mul Sin div flag { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { r add neg } { l add } ifelse X add /X ED }
def
/VPutAdjust { Sin Cos mul 0 eq { 0 } { l Sin mul Cos div flag { neg } if
r Sin mul Cos div flag not { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { d add } { h add neg } ifelse Y add /Y ED }
def
end
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: 8r.enc
% @@psencodingfile@{
%   author = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry",
%   version = "0.6",
%   date = "22 June 1996",
%   filename = "8r.enc",
%   email = "kb@@mail.tug.org",
%   address = "135 Center Hill Rd. // Plymouth, MA 02360",
%   codetable = "ISO/ASCII",
%   checksum = "119     662    4424",
%   docstring = "Encoding for TrueType or Type 1 fonts to be used with TeX."
% @}
% 
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% 
% (4) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available.
% 
% (5) hyphen appears twice for compatibility with both ASCII and Windows.
% 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /.notdef /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /.notdef
  /breve /minus /.notdef 
% These are the only two remaining unencoded characters, so may as
% well include them.
  /Zcaron /zcaron 
% 0x10
 /caron /dotlessi 
% (unusual TeX characters available in, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl 
 /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef
 % very contentious; it's so painful not having quoteleft and quoteright
 % at 96 and 145 that we move the things normally found there down to here.
 /grave /quotesingle 
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /.notdef /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /.notdef /.notdef /.notdef
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /.notdef /.notdef /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def

%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600 (kcp-template.dvi)
@start /Fa 171[61 1[66 1[55 7[72 2[61 1[66 1[72 15[50
49[{TeXBase1Encoding ReEncodeFont}8 99.6264 /Times-Roman
rf /Fb 192[42 63[{TeXBase1Encoding ReEncodeFont}1 83.022
/Times-Bold rf /Fc 168[78 1[60 51 46 55 1[46 60 60 74
51 60 1[28 1[60 46 51 60 55 1[60 15[42 2[21 46[{
.167 SlantFont TeXBase1Encoding ReEncodeFont}20 83.022
/Times-Roman rf /Fd 138[42 23 32 32 1[42 42 42 1[23 37
1[23 42 42 23 37 42 37 1[42 97[{TeXBase1Encoding ReEncodeFont}17
83.022 /Times-Italic rf /Fe 134[50 50 72 50 55 33 39
44 1[55 50 55 83 28 55 1[28 55 50 33 44 55 44 55 50 9[100
2[66 55 72 1[61 1[72 94 6[61 1[72 72 1[72 1[50 13[50
49[{TeXBase1Encoding ReEncodeFont}36 99.6264 /Times-Bold
rf /Ff 170[86 73 66 80 1[66 86 86 4[40 2[66 73 86 80
1[86 65[{TeXBase1Encoding ReEncodeFont}13 119.552 /Times-Roman
rf
%DVIPSBitmapFont: Fg cmss8 8 25
/Fg 25 122 df<127EA6121E123CA21238A212781270A212F0070F7A8514>44
D<12FCA60606798514>46 D<143F4A7EA24A7EA214F701017F14E701037F14E3A2903807
C3F8A290380FC1FC1481A290381F80FE1400157E49137F133E017E6D7EA2137C01FC6D7E
5B000181150F5B48B67EA348819038C00003000F8115015B001F6E7EA248C87E82123E00
7E1680163F127C00FCED1FC02A2E7EAD2F>65 D<B46CEB07E07FA27FA2EAFDF0A2EAFCF8
A27F137C137E133E133F7F1480130F14C0A2EB07E0A2EB03F0A2EB01F8A2EB00FCA2147E
A2143E143F141F1587140F15C7140715E71403A2EC01F7A2EC00FFA2157FA2153F232E79
AD32>78 D<13FF000713E0001F7F487F80EB00FE0038137F00207FC7FCEC1F80A6EB0FFF
90B5FC1207121F383FFC1FEA7FC0EAFE005AA2143FA26C137F387F83FF90B5FC7E149F38
1FFE1FD807F0C7FC19217D9F22>97 D<12FCAFEB07F0EB3FF8EBFFFEB6FC158013C09038
003FC048131F48EB0FE01407A215F01403A8EC07E0A2140F6C14C0141F6CEB3F80EBC0FF
90B512005C00FC5BEB7FF038000FC01C2F7BAD24>I<EB1FF0EB7FFE48B512804814C05A
380FF00F391FC00380EB800048C8FCA2127EA35AA8127EA2127F7E6D1340391FC001C038
0FF00F6CB5FC7E6C148039007FFE00EB1FF01A217E9F1F>I<EC03F0AF137F3801FFE348
13FB4813FF5A381FF03F383FC00FEB8007387F0003127EA212FE5AA87E127EA2007F1307
383F800FEBC01F381FF03F6CB5FC6C13FB6C13F36C13C36C6CC7FC1C2F7EAD24>I<EB1F
80EBFFF0487F00077F487FEBE07F48487E48487E9038000F80007E1307A2007C14C0B6FC
A500F8C8FCA27EA2127C127EA27E6D1340391FC001C0380FF01F6CB5FC7E6C148039007F
FE00EB1FE01A217E9F1F>I<EB03F8EB0FFE133F137F13FFEBFE063801F8005B1203A9B5
12E0A43803F000B3A8172F7FAE16>I<013F137C9038FFC7FC0003EBFFFE5A5A9038C0FC
00381F807EEB003E003E7FA76C133EEB807E6C6C5A13FF485B5C001E13C0D83E3FC7FC90
C8FCA27EEBFFF8ECFF806C14C04814E04814F0397F000FF8007E130348EB01FC1400A400
7EEB01F8007F1303393FE01FF06CB512E06C14C06C14800001EBFE0038003FF01F2E7E9E
23>I<12FCAFEB0FE0EB3FF8EBFFFC00FD7FB6FC13C0EB803F0100138048131FA35AB3A2
192E7BAD24>I<12FEA71200AA127EB3AC072F7CAE11>I<12FCB3B3AA062E7BAD11>108
D<D90FF013FF27FC3FFC0313C09026FFFE0F13E000FD6D4813F0B600BF13F89039E07FFE
079039801FF801010001F013FC4890380FE000A3485CB3A22E1F7B9E39>I<EB0FE038FC
3FF8EBFFFC00FD7FB6FC13C0EB803F0100138048131FA35AB3A2191F7B9E24>I<EB1FE0
EB7FF83801FFFE487F481480390FF03FC0391FC00FE0EB8007393F0003F0A2007EEB01F8
A2007C130000FC14FCA8007EEB01F8A2007F13036C14F0EB8007391FC00FE0390FF03FC0
6CB512806C14006C5B38007FF8EB1FE01E217E9F23>I<EB07F038FC3FF8EBFFFEB6FC15
8013C09038003FC048131F48EB0FE0A2140715F01403A8EC07E0A2140F6C14C0141F6CEB
7F80EBC1FF90B512005C00FC5BEB7FF0EB0FC090C8FCAC1C2C7B9E24>I<EB0780EAF81F
137F13FF12F938FBF800EAFFE05B5B90C7FCA25AA25AB2111F7B9E18>114
D<48B4FC000713E0001F13F84813FC5A130000FE13384813081400A37EEA7F8013FC383F
FF806C13E06C13F0000313F8C613FC1307EB01FE1300147EA31240007013FCEAFE01B512
F8A26C13F0000F13C00001130017217E9F1B>I<EA07E0A8B512F0A43807E000B3A2EBF0
1000031370EBFFF8A27E6C13E0EB7F0015277FA519>I<00FCEB1F80B3A5143F147F38FE
01FFB6FC7E14DF383FFE1FD80FF0C7FC191F7B9D24>I<00FC14FC007E14F81401A26CEB
03F0A21380001FEB07E0A2390FC00FC0A33907E01F80A2D803F013005CA23801F83E147E
0000137C13FC14FCEB7CF8A36D5A133F6D5AA31E1E7F9D21>I<00FC90391FC001F8143F
007E16F0EDE003143D6C017D14E0913879F007A26C01F914C0D980F8130F15F814F0D80F
C11580ED781F157C000701E0140013E36F5A0003153E14C0A201F7EB1E7E00019038801F
7CA2150F00001578D9FF0013F815076D5C137E2D1E7F9D30>I<00FC14FC007EEB01F8A2
127F6CEB03F01380001FEB07E013C0120FEC0FC0EA07E01580EBF01F000314005CEA01F8
143E12006D5A137CA21478EB3EF85C131EA26D5AA26D5AA25CA2130F91C7FC5B131E133E
A2EA307CEA3FF8A25B5BEA0FC01E2C7F9D21>121 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh cmsy10 10 1
/Fh 1 14 df<923803FFC0033F13FC4AB67E020715E0913A1FFE007FF8DA7FE0EB07FE4A
C87ED903FCED3FC0D907F0ED0FE0D90FC0ED03F049486F7E49CA7E017E177E4983498348
48EF0F80000319C04917074848EF03E0000F19F049170148CC12F8A2001E1978003E197C
A2003C193C007C193EA20078191EA300F8191FA248190FAA6C191FA20078191EA3007C19
3EA2003C193C003E197CA2001E1978001F19F8A26C6CEF01F06D1703000719E06C6CEF07
C06D170F000119806C6CEF1F006D5F017E177E6D5F6D6C4B5A6D6C4B5AD907F0ED0FE0D9
03FCED3FC0D900FF03FFC7FCDA7FE0EB07FEDA1FFEEB7FF80207B612E002011580DA003F
01FCC8FC030313C0484E7BBB53>13 D E
%EndDVIPSBitmapFont
/Fi 104[83 28[37 42 42 60 42 42 23 32 28 42 42 42 42
65 23 42 23 23 42 42 28 37 42 37 42 37 28 8[78 1[60 51
46 55 1[46 60 60 74 3[28 60 60 46 51 60 55 1[60 1[37
3[23 23 4[42 42 42 42 42 42 1[21 28 21 2[28 28 28 35[46
46 2[{TeXBase1Encoding ReEncodeFont}62 83.022 /Times-Roman
rf
%DVIPSBitmapFont: Fj cmss14 15 12
/Fj 12 116 df<EA7FE0AA1207EA0FC0A31380121FA213005AA2123EA2127E127CA212FC
0B1A76D521>39 D<EEFFFC030FEBFFF0037F14FE4AB712C0020716F05C143F4A16E091B5
EA800F010301FCC7FC4901F0141F4901C014074B14014948C912C049481600495A495A5C
5A485B5C5A91CBFC5A5B121F5BA2123F5BA3485AA5485AAE6C7EA56C7EA37F121FA27F12
0F7F7E807E806C7F7E806D6C16106D6C16306D6C16F06D6C6C14016F14076D01F0EC0FF8
6D01FC147F01009039FF8007FF6E90B6FC6E16F0020F16C06E16800201EDFE006E6C14F8
030F14C0030001FCC7FC3D5878D64C>67 D<D8FFE0EE1FFF4E5A4E5A4E5A4D5B4D5B614D
5B4D90C7FC4D5A4D5A177F4D5A4C5B4C5B4C5B4C5B95C8FC4C5A4C5A4C5A4C5A5D4B5B4B
5B4B5B4B90C9FC4B5A4B5A5E4B5A4A5B4A5B4A5B5C4A7F4A7F5C91B57E01E180A201E380
01E713BF01EFEB1FFE9039FFFE0FFFA24A6C7F02F8804A7E4A6C7F02C0804A7E91C76C7E
5B496E7E496E7EA2496E7E498282707FA2707F707FA2717E84173F717E8483717FA2717F
717FA2717F85187F727E85181F727EA27213807213C0425676D552>75
D<EAFFE0B3B3B3B3A690B81280A8315676D541>I<EE07FEB3ACEC7FC0903803FFF8010F
13FF4914874914E74914F790B7FC5A48EBFC0348EBF00002C0133F4890C7121F49140F48
481407A2485AA25B127F5BA312FF5BAC6C7EA46C7EA27F001F150F6D141F6C7E6D143F6C
6D137F9138E001FF6CEBF8076C90B6FC6C15F716E76D14C7011F14076D13FE010313F001
000180C7FC2F577CD53D>100 D<EC0FF8EC7FFF49B512E0010780011F804914FE498090
B7FC48D9F80F138048D9E00313C0EC80004890C7EA7FE04848143F49EC1FF0121F49140F
484815F816075B127FA249EC03FC90B7FCB8FCA60180C9FCA37FA3127FA27FA26C7EA26C
7EA26C7E6D15106C6C15706E14F06C6D13036C01F0EB1FF86C9038FE01FF6DB6FC7F6D15
F06D15C001031500010014FC023F13F0020790C7FC2E3A7DB835>I<DA1FE0EB03F8DAFF
FC137F01039038FF03FF010F14DF4991B5FC4916FC5B9038FFF03F9126C00FFCC7FC4890
380003FE4881497F48486D7FA348486E7EAA6C6C4A5AA36C6C4990C7FC6D5B6C5D6C9038
C00FFCECF03F4890B55A5E485D5ED807F391C8FC01E013FCEC1FE091CAFCA47FA27F7F6C
B612F0EEFF806C16E06C16F8000316FE48824817804817C001FCC7001F13E0D83FF01403
49020013F0007F163F49151F00FF17F849150FA66C6CED1FF06D153F6D157F6C6CEDFFE0
D81FFE020313C06C6C6C010F13806C01F890B512006C90B65A6C5E6C6C15F06D5D010792
C7FC010114FCD9000F138036527DB73C>103 D<EAFFE0ABC7FCB2EA7FE0B3B3B30B5478
D31D>105 D<EAFFC0B3B3B3B3AE0A5677D51D>108 D<EC03FE3AFFC03FFFC091B57E01C1
14F801C78001CF8013DF90B7FCECC03FDA000F1380497F497F497F17C05B815BA45BB3B2
2A3877B73D>110 D<EC03FE91383FFFE091B512F8010314FE010F6E7E49814981498190
26FFFE037F489039F0007FFC4801C0EB1FFE4A130F4890C76C7E48486E1380498048486E
13C0A24848ED7FE0A249153F007F17F0A349151F00FF17F8AA6D153F007F17F0A36D157F
003F17E0A26D15FF001F17C06D5C6C6C4A13806D5C6C6D4913006C6D495A6C01F0EB7FFC
6C9039FE03FFF86DB65A6D5D6D5D6D5D01034AC7FC010014F8023F13E0DA03FEC8FC353A
7DB83C>I<903803FFE0011F13FE017FEBFF8048B612F04815F85A5A4815F09038FE003F
D83FF8130701E01300163048481400A67FA26C7E13FCEBFF806C13F86CEBFFC015F06C14
FC6C14FF6C15806C6C14C06D14E0010F14F0010014F81407020013FC153F150FED07FEA2
1503A512700078EC07FC127ED87F80130F01E0EB1FF8D8FFFE13FF90B612F0A26C15E000
1F15C0000715800001ECFE00D8003F13F801031380273A7DB82E>115
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fk cmss10 10 66
/Fk 66 123 df<EB01F8EB07FE010FEB03F8131F133FEB7F0EEB7E02EBFE005B92C7FC12
01ACB538FE03F8A53801FC00B3AE253B7FBA2D>12 D<EB3F80EB7F0013FE5B485A485A48
5AA2485A485A48C7FC123E5A5A110E6FB92A>19 D<12FEB3B3A61200A912FEA7073A76B9
1B>33 D<12FEA7121E123CA312381278A21270A212F0071178B917>39
D<12FEA7121E123CA312381278A21270A212F00711788617>44 D<B512FCA516057F941C
>I<12FEA70707788617>I<EB03F8EB1FFF017F13C090B57E48803903FE0FF83907F803FC
48486C7EEBE0004848137F497F003F1580A290C7121F4815C0A3007E140FA300FE15E0B3
007FEC1FC0A56C6CEB3F80A36C6CEB7F00A26C6C13FEEBF0016C6C485A3903FE0FF86CB5
5A6C5C6D5B011F90C7FCEB03F8233A7DB72A>48 D<14C013011307131F13FFB5FCA4131F
1200B3B3A5007FB512F0A51C3879B72A>I<EB0FF8EB7FFF48B512C0488048804880391F
F01FFC9038C007FE393F0001FF003E7F007E1580007C147F00FC143F5A007815C0123800
30141F1210C8FCA2153FA21680A2157F160015FEA24A5A4A5A4A5A4A5A4A5A4A5A4AC7FC
14FE495A495A495AEB0FC0495A49C8FC137E5B485A485A485A485A485A48C9FC48B612C0
A622387DB72A>I<EB07F8EB3FFF90B512C048804880000F809038FC0FFC391FE003FE38
3FC0016CC7FC000E80A2000480C8FCA25DA25D14015D14034A5A4A5AEC7FE090381FFFC0
5D4AC7FC6E7E15E09038000FF8EC03FCEC00FE157F1680153F16C0A2ED1FE0A70040143F
006015C0127000F8EC7F807EB4ECFF00387FC003393FF80FFE6CB55A6C5C00035C6C14C0
6C6C90C7FCEB07FC233A7DB72A>I<EC07F8140FA2141B143BA2147B147314F31301A2EB
03E3A2EB07C3130FA2EB1F83A2EB3F03137F137E13FE13FCEA01F8120313F0120713E012
0FEA1FC01380123F13005A12FEB712F8A5C73803F800AE25367EB52A>I<001FB512FEA6
01C0C8FCADEBC1FCEBCFFF01DF13C090B57E819038FE07F89038F803FC496C7E496C7E5B
497FC81380A2153F16C0A9ED7F8012101238EDFF00007C5BB4495A6C6C485A393FF01FF8
6CB55A6C5C6C5C6C5CC649C7FCEB1FF022387DB52A>I<EC3FE0903801FFF8010713FE5B
133F5B9038FFE01E48EB00064990C7FCEA03F8485AA2485A485AA25B123FA2387F007F90
3803FFC0010F13F0497FD87E7F7F39FEFE07FE38FFF8019038E000FF497FED3F805BED1F
C090C7FCA2ED0FE05AA5127E127FA46CEC1FC07FA2001FEC3F807F6C6CEB7F005D3907F8
01FE9038FE07FC6CB55A6C5C6C5C013F5B6D90C7FCEB03FC233A7DB72A>I<B712E0A6C8
1207ED0FC0ED1F80ED3F00157E15FE5D4A5A14034A5AA24A5A4A5AA24A5AA24AC7FCA214
FEA213015C13035C1307A25C130FA35C131FA35C133FA55C137FA823377DB52A>I<EB03
F8EB1FFF017F13C090B57E000314F8A23907FC07FC390FF001FEEBE0004848137F497F00
3F158090C7121FA66C6CEB3F00A26C6C137EA26C6C5B3903F803F8C6B512E06D5BD90FFE
C7FC497E90B512E048EB1FF03907F803FC390FE000FE4848137F4848EB3F8090C7121F48
15C0A200FEEC0FE0A8007FEC1FC0A26D133F003F15806D137F3A1FF001FF00390FFC07FE
6CB55A6C5C6C5C6C5C013F1380D907FCC7FC233A7DB72A>I<EB03FCEB1FFF017F13C090
B57E488048803907FC07FC380FF00148486C7E49137E4848137F8148C71380A2151F00FE
15C0A3150FA216E0A5151F127FA2153F6C7E157F6C7E6D13FF380FF0039038FC0FEF6CB5
EACFC06C141F6C13FE38007FF8EB1FC090C71380153FA2ED7F00A215FEA24A5A4A5A0006
13070007EB1FF0390FC07FE090B55A485C6C91C7FC6C13FC00015B38003FC0233A7DB72A
>I<12FEA71200B3A512FEA7072578A417>I<4AB4FC021F13E0027F13F849B57E01078090
390FFE03FF903A1FF0007F80D93FC0EB3FC04948131F49C713E0D801FC140F000391381F
CFF04848EB7FF74948B5FC48484814F8001F5B9039C00FF07F91381FE03F3A3F803FC01F
ED800F3B7F007F0007FCA202FE1303A212FE49481301AA6D6CEB03F8127FA2027FEB07F0
A23B3F803F800FE0EDC01F3B1FC01FE03FC091390FF07F806D6CB51200000F6D5B6C6C6C
5B9039F8007FF06C6CEB1FC0000191C8FC6CB4FC6D7E6D6C14FCD91FF0EB07F8D90FFEEB
7FF06DB612C0010115806D6CEBFE00021F13F0020113802E3C7CBA37>64
D<EC07F8A24A7EA24A7EA2157EEC3F7F143EA291387E3F80A2147C02FC7F151FA2D901F8
7F150F01038014F0A201076D7E14E0A2010F6D7E14C0A2011F6D7E1480013F808191C7FC
4981167F137E01FE6E7E90B7FCA24882A3D803F8C7EA0FF05B00078216075B000F821603
5B001F8216015B003F6F7EA248C91380177F127E00FE17C0323A7EB937>I<B67E15F815
FE6F7E82D9000113F09138003FF8150F6F7E6F7E150115008282A45E5E15014B5A15074B
5AED3FF0EDFFC090B65A4BC7FC15F815FF16C0D9000313F09138003FF8ED07FC6F7EED00
FFEE7F80EE3FC0A2161F17E0160FA4161F17C0163FA2EE7F80ED01FF4B1300ED0FFEED7F
FC90B65A16E016804BC7FC15E02B3A79B937>I<913803FF80023F13F891B6FC010315C0
5B131F4948C61380D97FF0130FD9FFC013034849130191C9FC485A485A485A5B121F5B12
3F5BA2485AA448CAFCAC6C7EA46C7EA27F121F7F120F7F6C7E6C7E6C6C15206E14E06C6D
1301D97FF0130FD93FFE137F6DB6FC010715C06D150001005C023F13F0020313802B3C7B
BA35>I<B612C015F815FE6F7E16E090C77FED3FF8ED0FFCED03FE6F7E81EE7F8017C016
3FEE1FE0A2EE0FF0A2160717F8A31603A217FCAB17F8A21607A217F0160FA2EE1FE0A2EE
3FC0A2EE7F8016FF4B13004B5AED0FFCED3FF8EDFFF090B65A168093C7FC15F815C02E3A
78B93C>I<B712F0A690C9FCB390B612C0A590C9FCB3A390B612FCA7263A78B932>I<B712
F0A690C9FCB3A290B6FCA590C9FCB3A9243A79B92F>I<913803FF80023F13F891B512FE
0103ECFFC04915E0131F4948C6FCD97FF0EB1FC0D9FFC01307484913014890C812404915
00485A485A5B121F5B123F5BA2485AA448CAFCA992383FFFF0A36C7EA2ED0007A26C7EA2
7F121F7F120F7F6C7E6C7E7F6C7F6C7FEB7FF0D93FFE137F6DB6FC13076D15C001001500
023F13F8020313802C3C7BBA37>I<B4ED3FC0B3A790B7FCA590C8123FB3AA2A3A78B93B>
I<12FFB3B3B3A4083A79B917>I<EC0FF0B3B3AD141F15E00060133F1270007CEBFFC0D8
FFE7138090B5FC1500003F13FC000F5BC613C01C3C7DB927>I<00FEED1FF0EE3FE0EE7F
C0EEFF804B13004B5A4B5A4B5A4B5A4B5A5E4B5A4BC7FC4A5A4A5A4A5A140F4A5A4A5A4A
5A4A5A4990C8FC495A1307497EA2497F497FEB7F9F9038FF1FE06C486C7E140701FC7F49
6C7EEBF00101E07F496C7E497F90C77F486E7E151F826F7E1507826F7E1501826F7E8217
80EE3FC0161F17E0EE0FF0160717F8EE03FC2E3A78B93A>I<B4FCB3B3B090B612C0A622
3A79B92D>I<D8FFC0ED07FFA36D5DA26D5D00FE177FA26D153F0178153EA2017C157EA2
6D15FCA3013F14016D15F8A26E1303010F15F06E1307A2010715E06E130FA2010315C06E
131FA2010115806E133FA2010015006E5B027C137E027E13FEA2023E5BEC3F01A2021F5B
1583A2020F5B15C702075BA3913803EFC0A215FF6E5BA26E90C7FCA392C8FCA2383A78B9
49>I<D8FFE0EC1FC0A27FA27FA2487EA2137EA2137F7F80131FA26D7EA2801307801303
80130180130080A2147FA2EC3F80A2EC1FC0A2140F15E0140715F0140315F8140115FC14
00A2157EA2157F153F169F151FA2ED0FDFA2ED07FFA281A281A22A3A78B93B>I<EC07F8
91387FFF8049B512E04980010F14FC90391FFC0FFE90393FE001FF903A7F80007F8049C7
6C7E48486E7E48486E7E49140700078248486E7E491401001F82491400A2003F82498100
7F1780A390C9123FA24817C0AC6C6CED7F80A56C6CEDFF00A26D5C001F5EA26C6C4A5AA2
6C6C4A5A6C6C4A5A6D141F00015E6C6C4A5AD97FC0EBFF806D6C4890C7FC90391FFC0FFE
6DB55A6D5C010114E06D6C1380DA07F8C8FC323E7BBB3D>I<B612C015F815FF8216E090
C77FED1FF8ED07FC15036F7E150082821780A2163FA4167FA217005E5E15014B5A1507ED
1FF8EDFFF090B65A168093C7FC15F815C090CAFCB3A6293A79B935>I<B67E15F815FE6F
7E8290C77FED1FF06F7EED03FC150182150082A282A35EA25E15015E1503ED0FF84B5AED
FFE090B65A5E4BC7FC15F815E09038000FF01407811403811401816E7E8182153F826F7E
A26F7EA26F7E1503826F7EA26F7EA2EE7F80EE3FC0A2EE1FE02B3A78B936>82
D<EB03FF011F13F0017F13FE48B612804815C05A4848C6FCD81FF0EB1F80484813070180
1303007F140090C9FCA212FEA67E7E7F7FEA3FF013FC381FFFC06C13FC6CEBFF806C14E0
6C14F86C80013F7F01077FD9007F1380020713C0020013E0157FED1FF0150FA2ED07F8A2
1503A6ED07F0124012600078EC0FE0007C141FB4EC3FC001C0EBFF80EBFC036CB6120000
1F5C6C14F800015C6C6C13C0D907FEC7FC253E7CBB2E>I<B912C0A6C7D807F8C8FCB3B3
B0323A7DB939>I<B4ED1FC0B3B3A76CED3F807FA36C6CEC7F00A26C6C14FE6C6C13016D
495A6C6C495A6C6CEB1FF03A01FFC07FE06C90B55A013F5C6D49C7FC010713F89038007F
C02A3C79B939>I<B46CED07F0007FEE0FE0A27F003FEE1FC0A26C6CED3F80A27F000FEE
7F00A27F000716FEA26C6C4A5AA27F00014B5AA27F6C4B5AA26D6C5C160F80013F4A5AA2
80011F4A5AA26D6C91C7FC5EA26D6C137E16FEA26D6C5B150101015C14FE150301005C14
FF1507027F5B158791383F8FC0A215CF021F5B15DF020F90C8FC15FFA26E5AA36E5A343A
7FB937>I<00FEDB7FC0EC0FE0007F1AC004FF151F83A26C6C1980DB01FB153F8316F36C
6CF07F00923803F1F8A26C6C187EDB07E115FE8316E06C6C60DB0FC0140183177E6C6C60
DB1F801403177F6C6C6F5C1907DB3F001380171F6C6C60037E150F18C0017E030F5C137F
4B151F18E06D03075C14804B153F028115F0011F030391C7FCA2DAC1F05DD90FC3913801
F87EA25D14E3010703005B02E715FC5DA20103EE7CF802F7157D5DD901FFED3FF0A292C8
FCA26D705AA24B3A7FB94E>I<EB1FF0EBFFFC000313FF000F14804814C09038E01FE090
38000FF0001C13070018EB03F81210C7FCEC01FCA7143FEB0FFF90B5FC1203120F381FFE
01EA3FE0EA7F80130012FEA414037E387F800FEBE03F6CB5FC7E6C13F96C13E1D801FEC7
FC1E287DA628>97 D<12FEB3A2EB01FCEB0FFF013F13C090B57EB67E9038F03FF8EBC007
496C7EEB0001486D7EA2157FA3ED3F80AAED7F00A35D5D14016C5CEB80039038C00FF890
38F03FF090B55A485C6D5BD91FFEC7FC380007F8213B7AB92B>I<EB03FE90381FFFC001
7F13E090B512F84814FC3803FC033907F8007CD80FE01338484813081500485AA248C8FC
A3127E12FEA9127FA36C7EA26D1302001F14066C6C131E6C6C137E9038FC03FE6CB5FCC6
14FC6D13F0011F13C0903807FC001F287DA625>I<ED3F80B3A2EB0FE0EB3FFC90B5FC48
14BF4814FF3807FE07380FF801381FE00049137F003F143F5B127F90C7FCA312FEAA127F
A36C7E157F6C7E6D13FF380FF0033807FE076CB512BF6C143F6C13FEEB7FF8D90FE0C7FC
213B7DB92B>I<EB07F8EB1FFE90387FFF8048B512C04814E03907FC0FF0390FF003F8EB
E001391FC000FC49137C003F147E90C7123E5A127E151F12FEB7FCA500FCC8FCA27EA212
7EA2127F7E7F6C7E6D13026C6C130E6C6C133E3903FE01FE6CB5FC6C14FC6D13F0011F13
C0903803FE0020287EA625>I<14FF010713C05B5B5BEB7F819038FE0040491300485AA2
1203ACB512FCA5D803F8C7FCB3AE1A3B7FBA19>I<903907E001F890383FFC1F90397FFE
7FFC90B6FC5A3A03F81FF8003907F00FE0EBE00748486C7EA248486C7EA86C6C485AA26C
6C485AEBF00F6C6C485A48B55A92C7FC485BEB3FFCEB07E090C9FCA37F7F6CB512C015FC
15FF4815804815C03A3F80007FE048C7EA0FF0007E140700FEEC03F8481401A46C140300
7E15F0D87F80130F6C6CEB1FE03A1FFC01FFC06CB612806C1500000114FC6C6C13F00107
90C7FC26387EA52A>I<12FEB3A2EB01FC90380FFF804913C0017F13E090B512F039FFF8
1FF8EBE007EBC003018013FC14011300A35AB3A71E3A7AB92B>I<12FFA81200AC127FB3
B308397BB814>I<EB0FF0A890C7FCACEB07F0B3B3AA38400FE0EA601F38FC7FC0B5FC14
806C1300EA1FFEEA03F8144A85B816>I<12FEB3A3EC03FE4A5A4A5A4A5A4A5A4A5A4A5A
4990C7FC495A5C495A495A495A495A495A497EB57EA280EBF7F813E3EBC1FCEB80FE497E
487F6E7E81141F6E7E8114076E7E6E7E811400157F1680213A7AB929>I<12FEB3B3B3A4
073A7AB914>I<D901FCEB03F83BFE0FFF801FFF496D481380017F6DB512C090B500F114
E03CFFF81FFBF03FF0D9E007EBC00F903AC003FF80070180020013F86E140301005BA348
5CB3A735267AA542>I<EB01FC39FE0FFF804913C0017F13E090B512F039FFF81FF8EBE0
07EBC003018013FC14011300A35AB3A71E267AA52B>I<EB03FE90380FFF80013F13E090
B512F848803903FE03FE3907F800FF4848EB7F8049133F4848EB1FC04848EB0FE0A290C7
12074815F0A2007E140300FE15F8A9007FEC07F0A36C6CEB0FE0A26C6CEB1FC06D133F6C
6CEB7F806C6CEBFF003903FE03FE6CB55A6C5C6D5B011F13C0D903FEC7FC25287EA62A>
I<EB01FC38FE0FFF013F13C090B57EB67E9038F03FF8EBC00F90388003FC1300486D7E14
008181A21680153FA9ED7F00A35D5D14016C495AEB80076D485A9038F03FF090B55A485C
6D5BD91FFEC7FCEB07F890C9FCAF21367AA52B>I<14F0EAFC07130F133F137F13FF00FD
130013FCEAFFF05B5BA25B90C7FCA35AB3A414267AA51C>114 D<EB7FE03801FFFC0007
EBFF804814C05A383FC03F90380007801401007E90C7FCA4127FA26C7E13F0EBFF806C13
F06C13FC6C7F6C7FC61480131F010013C0143FEC0FE0A21407A3124012600078EB0FC000
FE131F39FFC07F8090B5FC6C1400001F5B000313F838007FC01B287EA620>I<EA01FCAA
B6FCA5D801FCC7FCB3A76D138014013900FF07C014FFA26D1300EB3FFCEB1FE01A307FAE
1E>I<00FEEB01FCB3AA1403A214076C131F387F807F90B5FC6C13F914F1000F13C1D803
FCC7FC1E267AA42B>I<B4EC0FE06CEC1FC0A27F003FEC3F80A27F001FEC7F00A26C6C13
7E15FEA26C6C485AA36C6C485AA3D801FC5B140700005C13FE140F017E5B137F141F013F
5BA2149FD91FBFC7FCA3EB0FBE14FE6D5AA323257FA426>I<00FED901FEEB01FC007F17
F802031403A2018013DF003FEE07F01407ED9F80D81FC016E0020F140F158FD80FE002C0
13C0030F131F141FED07E0D807F01680021E143F143E0003DA03F0130013F8023C5C0001
017C147EED01F813FC027814FE0000D9F8005BA24A13FC017C5D167D137E5C013EEC3DF0
013F143F5C011F5D161F36257FA439>I<D87F80EB0FE0003FEC1FC06C6C133F6DEB7F80
6C6C1400000714FE6C6C485A3801FC0301FE5B6C6C485A6D485A90383F9FC0EB1FDF6DB4
5A92C7FC6D5A6D5A1301A2497E1307497EECDF8090381F9FC090383F0FE0496C7EEBFE03
01FC7F00016D7E48486C7E4848137F120F49EB3F804848EB1FC0484814E0007FEC0FF048
C7EA07F8252580A426>I<B4EC0FE06CEC1FC0A26C7EED3F807F001FEC7F00A26C7E15FE
7F00075C1401EA03F85DEBFC0312015D3800FE075D137E140F017F5B133FA290381F9F80
A292C7FC130FA2EB079E14DEA2EB03FCA26D5AA35C13035CA213075C130FA2495A1220D8
383FC8FCEA3FFEA25B5BEA0FE023367FA426>I<007FB512FCA415F8C7EA07F0140FEC1F
E015C0EC3F80147FECFF005C1301495A495A5C130F495A495A5C137F49C7FC485A5B1203
485A5B485A121F485A5B48B512FEB6FCA41F257EA424>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fl cmss11 25 16
/Fl 16 119 df[<90BB12F8AD4ACDFCB3B1933801FFE0041F13FE047FEBFFC00303B612
F04B15FC031F814B6F7E92B87E91B912F086868686DD007F8004F8130F04C00103804C6D
804BC86C7F4B814B6F7F5D4B6F7F4B814B838592C980854A19808590CCFC1CC0A2861CE0
A486A21CF0AE1CE062A41CC097B5FC120200071B8061487E4F1400487E6D4D5B487E6D4D
5B127F01FE4D5BB54D5B6C6D5E6E93B55A6C01F04B5C6C01FC4B5C6C01FF150F6C02C002
3F91C7FC6C02F891B55A6C9126FF800F5C6C92B75A6D60011F18C06D60010395C8FC6D17
FC6D6C16F0021F16C0020793C9FC020015FC031F14C0030001FCCAFC>84
140 120 263 103 53 D[<BA12F8F1FFC01AF81AFF1BE01BF81BFE757E1CE0881CFC8802
80C8000181DE000F15C0070181DF003F80080F80080380080080093F7F75807580090380
877580767F767F88767F767FA276808876808B898B89777FA2898B898BA2898BA2892080
A289A220C0A28AA220E0A38AA420F0A78AA466A720E0A466A320C0A29BB5FCA22080A265
A2200065A267656765A2535BA2535B65679AB5FC6764525C5291C7FC6466525B64525B51
B55A515C515C515C1B3F5191C8FC50B55A08075C083F14F097B65A07075D96B75A91BCC9
FC1CFC641CE01C8099CAFC1BFC1BE01B8008FCCBFC1AC007F8CCFC>116
144 108 271 148 68 D[<B66C0A7FB512C0A36F99B6FCA26F63A36F63A36F63A26F63A2
02BF8A6F63A220FEDA9FFF1B3FA2701A7F20FC148F701AFF20F81487706120F070611483
20E07061148120C070611480704F1380A2157F704F1300A281714E5AA281714E5AA26F6D
5F67A26F6D5F67A26F6D5F67715F6F63A2715F6F63A2715F7097C7FCA2706D5E667216FF
8266725D7061A2725D7061A2725D7061725D7061A2725D7061A2725D7195C8FCA2735C71
5FA2716D4A5AA3716D495BA2735B715FA2716D495BA3716D495BA3716D495BA3726C4990
C9FCA2725DF2807FA2725DF2C0FFA2725DA27201E15BA37201F35BA3725DA27290B55AA3
7391CAFCA3735BA2735BA3735BA3735B96CDFCA4>138 144 108
271 179 77 D[<B500E09A387FFF80A26C6D9AB51200A26C545B80A26C545B80A26C6D52
5BA26C545B80A26C545B816C545B81A26C545B81A26D6D98B5C7FCA26D525B81A26D525B
816D525B81A26D525B81A26D6E4F5BA26D525B82A26D525B826E9AC8FC7096B5FCA26E50
5B82A26E505B826E647060A26E505B82A26E505B836E505B83A26E505B836F98C9FC9AB5
FC836F4E5B83A26F4E5B836F6264836F62715E6F6264846F6264846F62725D7096CAFC99
B5FC84706063706D5EA263706D5EA2725C706063706D5EA263706E5DA2704C5B85A2714B
90CBFC85A2716D495AA2715E735AA2714A5B19FC715E6219FE715EA2627101FF5CA2714A
5B1A9FA27292CCFC1ABF97B5FC725CA2725CA3725CA2725CA3725CA3725C>129
144 125 271 136 86 D<923801FFF8037FEBFF800207B612F0021F15FC91B8FC010317
C0010F83013F17F890B97E48848586A29226F8000780038001018002FCC86C7F6C01F081
02C06F7F91C97E01FC707F13F049707F5B90CA7E8684A3731380AF4DB6FC0403B7FC93B8
FC150F92B9FC1407141F91BAFC1303130F5B017F4BC67E90B648C7FC4815C04802FCC8FC
4814E04814804801FCC9FC5C4813E05C485B91CAFCB5FC5BA696B5FC7F606C6D5DA26E5D
6E151F6C01F8157F6E4AB6FCDAFF80130F6C02F090B7FC92B9FC7E7E19BF6C183F6C17FC
6C17F06D16C06D16006D15F8010715C0010102FCCAFC9026003FFECBFC496177DE63>97
D[<97383FFF80B3B3AE923801FFE0031F13FF037F14E04AB612FC020715FF4A16C0023F
16F04A16F891B812FC4917FF4918BF4995B5FC5B49ED801F499138F8000304C013004991
C8123F90B500FC814B814802E015035D484A8192CAFC484983A2485B5C5A5CA2485BA35C
5AA25CA4B5FC91CBFCAF6C7FA5807EA280A27E80A26C7F6E94B5FC6C60806E5E6C606F5D
6C02E05D6C6E5D6F5D6D01FE92B6FC6F6C13036D02E0130F6D02FE137F6D91B9FC6D846D
17FE19FC010017F06E16E06E16806E1600020715FC6E15F002001580031F01FCCAFC0303
13C0>81 146 121 271 106 100 D<EE1FFE4BB512E0030F14FC033F14FF92B712C00203
16F0020F824A824A16FF4A8349B97E5B4984DCF0038049912680007F7F4949C7121F4901
F802077F4949804B02007F90B5486F7E484A8192C97E484918804A8248497013C0A24849
82A24A18E0484982A285484918F0A34890CB127FA291BAFCA21BF8A2BCFCA801FCCDFCA2
7FA5127FA27FA37E80A2807EA2807E806C7FA26C7F6E18206C6D18606FEE01E06C6E1603
6D6D160F6F163F6D6D16FF6D01FE030313F06D6D6C141F6D02E091B5FC04FE131F6D91B8
FC7F6D7E6E18E06E18806E1800020317FC6E17F06E6C16C0031F4BC7FC030315F0DB007F
91C8FC040713E04D6179DE5B>I[<B512C0B2C8FCB3AE383FFF80B3B3B3B3B3A2>18
142 114 269 48 105 D[<EAFFFEB3B3B00603B512C04E14804E14004E5B4E5B4E5B95B5
5A624D5C4D5C4D91C7FC4D5B4D5B4D5B4D5B94B55A4C5C4C5C4C91C8FC4C5B4C5B5E4C5B
93B55A4B5C4B5C4B5C95C9FC4B5B4B5B4B5B4B5B92B55A4A5C4A5C4A91CAFC4A804A805C
4A8091B67E90B7FC8383A28303FD7F03F8805D4B6C7F4B6C7F15804B6C7F4A6D7F5C4A6D
7F4A6D7F5C4A6D7F4A6D8091C8FC496F7F717F8385717F717FA2717F717FA27180727FA2
727F727FA2727F727FA2727F727F841B807313C07313E0A27313F07313F8A27313FC7313
FE>79 144 111 271 100 107 D[<EAFFFEB3B3B3B3B3B3B3B2>15
144 112 271 48 I<932601FFE0EFFFF0D8FFFE023F01FF041FEBFF804BB600C092B612
E0030703F0020315F8031F03FC020F15FE4B6F4A8192B86C017F16C04A7190B87E020718
034A7148834A7148834A7148834A6091B5D8001F6E48D9800F8003F8010104FCC7FC90B5
00E06D6CDAFFF0143F4B021F90B548020F7F4B6E4B8092C86C4B804A6F92C86C14804A60
4A6F4A81A24A6F4A8222C04A60A24A704982A44A60A491CA5CB3B3B3A5825E70DDA3>I<
933801FFE0D8FFFE023F13FF4BB612C0030715F0031F15FC4B8192B87E4A8314074A834A
834A835C91B5D8001F8003F8130190B500E06D7E4B021F7F4B8092C87E4A6F7F5C4A81A2
4A811B805CA24A82A45CA491CAFCB3B3B3A5495E70DD6A>I<933801FFE0043F13FF4BB6
12E0030F15FC033F15FF92B812C04A83020717F84A834A83027F717E91BA7E498549DB00
3F804902F0010380490280D9007F7F4949C8001F7F4B814901F003037F49496F804B8190
B548707F4891CA6C7F4A834849717FA24849717FA24849717FA24849717FA24A834887A2
4A84A2481C80A391CC7EA2B51BC0AD6E60A26C1C80A36E95B5FCA26C1C006E5FA26C636E
5FA26C6D4D5BA26C6D4D5B6E5F6C6D4D5BA26C6E4C5B6F93B5FC6C6E4B5C6D01F803075C
6F5D6D01FF033F91C7FC6D02C091B55A6D02F001035C6D02FF013F5C6D92B75A6D616D61
6E606E95C8FC6E5F020717F86E5F020017C0033F93C9FC030F15FC030115E0DB003F91CA
FC040313F05A617ADE67>I<92383FFFF00207B612C0023F15FC91B87E010317F0010F17
FC4917FF137F90BAFC48605AA2489138C0003F4849C7120102F8EC003F4849ED07FC4A15
014AED007C4849161C190C96C7FC91CCFC5AA680A280A26C7F80806C13FE6E7E6C14F8ED
FF806C15FCEEFFE06C16FC6CEEFF806C17E06D16F86D826D16FF0107836D83010083023F
82020F82020182EC001F030081040780EE007F051F1480170717017114C084841AE084A2
84A800384D13C0123C003F5F7F01E04C1380D87FF893B5FC01FF5D02C04A140002FC141F
DAFFE090B55A92B75ABAFC61616C60001F6000076000014DC7FCD8003F5E010716F00100
16C0020F02FCC8FCDA003F13C043617ADE4F>115 D<B594387FFF80B3B3B3AC96B5FCA3
60A26060A26E5D60606C6D92B6FC5F02F0140702FC143F6C9026FF8001B7FC92B712BFF0
FE3F6C17FC6C17F818E06C17806CEEFE006C16F86C16C0013F4AC7FC010F02E091C8FC01
0001FCCBFC495E70DB6A>117 D<B56C943801FFFEA26C4F13FC80A26C4F13F8806C4F13
F0A2806C4F13E080A26C4F13C0806C4F1380A2806C96B5120080A26C4E5B816D6161816D
4D5BA2816D4D5B816D6161816D6161816D4D5BA26D6D94C7FC96B5FC816D6060826E5F60
6E6D5DA2606E6D5DA2606E6D5DA2606E6D5DA26E4B5B82A26E4B90C8FC82A26E4B5A826F
5D5FA26F01815BA217836F01C35BA26F01C75BA217E76F5DA217EF6F5D94B5FC6F92C9FC
A36F5CA3705BA2705BA2575C7DDB5E>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fm cmss14 33 20
/Fm 20 121 df[<BB12FEF2FFFCF3FFE01CFEF4FFC01DF01DFE777E1EE01EF81EFE8A1F
C08B8B1FFC02FCCA83080182E0001F82090382E1007F810A0F810A03810A00810B3F8089
0B0780778189776C808A78808A8D8A78808AA27880A28BA28D8BAA6769A39CB5FC696669
66666966545C545C669BB6C7FC535C535C1D0F535C535C9AB65A0A035D0A0F5D0A3F4AC8
FC51B65A090F5D097F15E0080FB75A070FB8C9FC91BD12FC661EE01E800BFCCAFC1DF01D
800AF8CBFCF4FFC01DF81DFF1EE01EF81EFF1FC08B1FF802FCCA000716FEE0001F810901
16C0E1003F810A07810A0115FC766C800B1F800B078177810B008178801E1F7880788078
808A78807914808B22C08B7914E0A28B7914F0A37914F8A38B22FCA48CA49DB5FCA522F8
67A26722F067A25514E0A2675514C06722809CB6FC541500660C0F5C545C669BB65A535D
0B075D1D1F0B7F5D52B75A0A0F93C7FC0A7F5D0907B75A0803B85A91BF12E0686855C8FC
671FF0671F8054C9FC1EF81EC09BCAFC1DF81D800AF8CBFC09FCCCFC>134
190 103 317 175 66 D[<091FB5FC0807B77E087F16FC0703B912C0071F18FC96BB7E06
031AF0060F1AFC063FF2FF8095BD12E005031CF85F171F4D1CF094BEFC5E16075E4C9338
F800034C93C8000F15E04C03F8ED007F93B700C0160F4B93CA12014B03FC717E4B03F018
1F4B03C0060713C04B92CC12014B4AF1007F4B4A1A1F92B600F01A0F4A4BF203804A4B1A
014E97C7FC4A92D0FC4A5C4A5C5F4A5C4A5C5F91B65A5B94D1FC495C5E5B495CA2495C5E
5B5EA2495CA290B6D2FCA2485CA25D5AA25D5A5DA25A5DA35A5DA35A5DA45A92D3FCA7B5
5AB3A46C7FA7817EA4817EA3817EA3817EA2817E81A27E81A26C80A26D80A26D80A2827F
826D80A26D807F826D80837F6E80836E806E80836E806E6E1C046E6F1B1C721B3C6E6F1B
FC6E6F1A016F02FCF207FE6F6E1A0F6F6E1A3F6F03C019FF6F03F018036F03FC180F6F03
FF183F6F04C04CB5FC7003F8160F7003FF93B7FC7004F8147F7093BBFC821601701DFE05
3F1CF8711CE005071CC0711C0005001BFC063F1AF0060F1AC0060397C7FC060019FC071F
18F007031880DF007F04F8C8FC08071680E0001F0280C9FC>136
196 110 320 168 I[<C5B5FCB2CD000702F0CDFCB3B3B3B3B3B3B3B3B3A9>160
189 119 316 179 84 D<94387FFF80043FB512FC0303B77E033F16E04AB812F8020717
FE021F717E027F8449BA7E010719F8011F85017F8590BCFC888888A26D02FCC76C800480
021F8003FCC8120703E06F8003806F804ACAFC02F8717F02E08302801A806DCB7E013C72
14C0133801308490CC15E086A21DF086A41DF886B3070FB6FC063FB7FC050FB8FC4CB9FC
161F93BAFC1507153F4ABBFC1407141F147F91BCFC1303491800011F04FCC7FC4993C8FC
4915F090B7C9FC4815F84815C04892CAFC4814FC15F0485C15804891CBFC5C485BA25CB5
FC5CA662A280627E6E5F6E5F626E5F6C6E5E6F93B6FC03F015036C6E150F03FE153FDBFF
C049B7FC6C03FC133F93BAFC7EA27E6C861AFE6C19F86D18F06D18C06D18006D17FC6D17
F0010117806D04FCC7FC023F03C091C8FC020F02FCCBFC020049CCFC5D8175FD7E>97
D<95387FFFF0050FB612E0057F15FE0403B87E040F17F0043F17FC93BAFC030319C04B19
F0031F854B19FE4BF1FF804ABC12C05C5C4A1B805C5C4A9238E0001F91B648C87E05F015
074903C0030014004992CA123F494A170F494A170304F083494A717E494A183E4C180E49
91CC12064B96C7FC90B5FC5D485CA2485CA2485CA25D5A5DA24891CFFCA35A5CA3485BA7
B55AB16C7FA66C7FA3807EA281A27E817E81A26C80A26C806F1A406C1DC06F19036D6D19
0770180F6D6EF03FE06D6E18FF705F6D6E17076D02FE171F70177F6D03C00303B5FC6D03
F0151F6D03FE4AB6FC6EDAFFE0017F15F06E92B9FC8080806E1BE06E1B806E1B006F19FC
031F616F19E00303198003004EC7FC043F17F8040F17C004034CC8FCDC007F15F0050F92
C9FCDD007F13C0648177FD75>99 D[<0A0FB5FCB3B3B3ACEFFFFC040FEBFFE0047F14FE
4BB712C0030716F04B16FE033FEEFF804B17C04AB912F04A18FC4A18FE4A18FF4A19CF4A
19EF4A96B6FC91BEFC5B49EEF8000680130F4903FCC712034903E014000580153F4992C9
7E4902FC824C16034902E0824C8290B65A93CB7E48874B84485C5D5A5D5D5A5DA2485CA3
92CCFC5AA25CA25AA25CA5B5FC5CB26C7FA6807EA380A27E81A27E81A26C8064816C6E60
A26C6E95B6FC6F5FA26C6E5F705E6D6E5E6D6E5E04F85E6D6E5E04FF4BB7FC6D03C05C6D
03F0140F05FC147F6D9226FFC007B8FC6D93BAFC6D1ADF6E199F1C1F6E18FE6E18FC6E18
F0020318E06E18806E18006F16FC031F16F0030716C06F93C7FCDB007F02F891C8FC041F
1480040101F0CBFC>104 193 119 317 135 I<943801FFF0053FEBFF804CB612F8040F
15FE043F6F7E93B812E0030317F84B17FE031F834B8492BA12E04A854A854A854A855C4A
854ADB801F8191B626F80001814903E06D7E490380021F804CC8000780494A814902F06F
804C81494A707F494A8293CA6C7F4949834B8390B5864B83485C751480485C87484A1AC0
4B845A92CCFC7613E05A5C88A248491BF0A34A855A91BDFCA31EF8A3BFFCA902E0CFFCA3
80A57EA380A37E80A36C7FA3807E81A26C80A26C80A26C80817E6F1A406D6D1AC06F1903
6D6E180770180F6D6E183F6D6E18FF705F6D6E17076D02FF051F13E06D6F93B5FC05E015
036D03F8151F6E02FF4AB6FC6E03F0137F6E92B9FC80806E1BC06E1B006E6C616F19F86F
61030719C0030196C7FC6F18FC043F17F0040F17C004014CC8FCDC003F15E005074AC9FC
DD003F1380658178FD75>I[<F1FFFE061FEBFFFC95B712C0050316F0170F173F5F4CB8FC
5E5E161F5E5E93B9FCA25D5D4BED80034B02F8C7121F06C014034B4AEC00704B49CAFC5F
4B5B5F92B55A5F5F5C94CBFC5CA25EA25CA55CB3AFBB12F0B0C7000F91CBFCB3B3B3B3B3
AF>84 193 122 320 80 I<942607FF80EF3FF094B500FCEE1FFF0407DAFF800203B5FC
041F03E0023F14F8047F03F849B6FC4BB700FE130F03079338FF803F4B05C1B7FC4B17E7
037F94B812FC92BEFC5C5C5C5C4A1DFEEFFC004A02E0011F03E0C7123E4A0280010702F8
C9FC91B548C700018004F86E7E494A6F7F4C81494A6F7FA2494A6F8093C97E49874B82A2
49497080A34949717FA54949717FAE6D6D4D5BA56D6D94B55AA36D6D4C5CA26F5E6D6370
5D6D6E4B91C9FCA26D6E4B5B705D6D6E4B5B04FE4AB5FC6E6D6C01075C6E02E0011F5C4A
02FC90B65A94B8FC91BB5A496299CAFC49616349611BE003EF5F4901C75F03C14CCBFCDB
C07F15F849D9801F15E004071580040002FCCCFC0507138094CFFC92D1FCA281A581A281
A26D7F8115FE6D6D7E93B87EF3FF806D1AFCF4FFC06D1BF86D1BFE777E6E1BE091BD12F8
010388491CFF498949894989498990BF7E5A0480C80001824802FCCA0007814802F0EF00
7F4B060F80484A18034B060015804891CD7E7714C0484986894A7414E048885C8920F0B5
FC4A86A86E62A26C1FE06E62A26C6D5014C06E626C6E4F14806F616C6E4F140003F84EB6
FC6C02FE06075C6C6E4E5C04C0173F6C03F84CB65A6C03FF040F5D6D03F092B75A6DDBFF
80011F5E6D93BA5A6D9AC7FC6D6401011CF86D64023F1BC06E63020750C8FC02011AF86E
6C19E0030F96C9FC030318FCDB007F17E004074CCAFCDC007F15E0050002F0CBFC77B579
FB83>I[<B512FEB3A5C8FCB3B3A5383FFFFCB3B3B3B3B3B3AD>23
185 109 312 63 105 D[<B512F0B3B3B3B3B3B3B3B3B3B3AA>20
190 107 317 63 108 D<DE3FFFF13FFF0503B500F80503B512F8B500F0023F02FF053F
14FF94B700E093B712E0040304F8030316F8040F70030F82043F04FF033F16FF93B96C91
B97E4B7249844B724984030F72010F844B7249844B7249844B6292BA6C90BA7E02F17348
8502F36202F7DAC0070487DAC00716804CC7003F4DC7123F91B500F0020F038F01F0140F
4C020303DF49020315C04C020092B548140093C96C93C96C14E04B704B824B704B827486
4B5019F04B704B82A24B704B82A24B704B82A114F84B62A292CA93CAFC7486A24A62A44A
62A64A62B3B3B3B3A4A57C6BFBD0>I<F03FFF0507B512F8B500F0023F14FF4CB712C004
0716F0041F16FC4C8293B9FC4B840307844B844B844B845D92BA7E02F18514F302F7DA80
078191B500FCC77E04F0020F15804C140304808093C915C04B824B824B821DE04B825D86
5D864B19F0A392CAFC86A25CA45CA65CB3B3B3B3A45C7C6BFB87>I<F03FFF0507B512F8
053F14FF4CB712E0040F16FC043F16FF93B912C04B84030718F84B84033F18FF4B8592BB
7E02031AF04A864A864A864ADBE001814A4AC7001F8105F0140391B600C00200814992C9
003F80494A70804902F80407804C82494A7080494A70804C834991CB6C7F494972804B84
90B5884B84484A7280A2484A7280A24B84488A4B85488A92CD7EA2488A4A86A3488A4A86
A3481F80A34A86A3B51EC0AF6E62A26C1F80A56E626C1F00A36E62A26C666F61A26C6E96
B55AA36C6E4E5CA26C6E4E5C6F606C666F606C6E4E5CA26D6D4E5C705F6D6E94B6C7FC6D
6E4C5C705E6D02FC040F5C6D6E4C5C706C157F6D6F92B65A6D03F802075D6D03FE021F5D
6E9126FFE001B75A6E92B9C8FC6E626E626E626E626E626E62033F96C9FC6F606F600303
18F0030018C0043F94CAFC040F16FC040316F0DC007F1580050702F8CBFCDD003F90CCFC
728178FD83>I<953801FFF0067F13FF0507B612C0B500F0023F15F04CB712FC040F16FF
043F8393B97E0303844B84031F844B8492BA7E02F18502F38691BC7E89A2DDC0078204FC
C76C8104F0141F04C002038193C87E03FC6F6C804B824B708003C016074B70158092CA7E
1EC04A834A844A7214E0A27514F087A27514F8A287A27514FCA287A37613FEA488A31EFF
A388AF64A21EFEA464A21EFC99B5FCA3631EF8A2631EF063A25114E063A25114C06E601E
806E95B6FC5015006E5F6F4C5C6F5E505C6F5E6F4C5C6F4BB65A03FE15076F4B5D04C002
7F5D04F049B7FC04FF011F5E94B9C7FC646402FB6102F961DAF87F606F606F606F4DC8FC
03035F6F5F6F6C16E0041F168004074BC9FC040015F8051F14C0050001F8CAFC95CCFCB3
B3AE68B16BFB87>I<F001FE183FB500E0EC01FF170F173F94B5FC1603160F5E167F93B6
FC5D15075D5D5D5D92B7FC02E1160018F002E392C7FC02E714FC02EF14F091B612C094C8
FC5E5E16F05E5E5E93C9FC5D5DA25D5DA25D5DA25DA292CAFCA35CA25CA45CA55CB3B3B3
AD3F7C6BFB59>114 D<93380FFFFE0303B612FC033FEDFFC04AB812F8020717FF021F18
E0027F18F891BA12FE49F1FF8001071AE05B5B491AC05BA290BCFC489238E000074BC812
1F4802F80303148003E0ED007F484A160F4B16034891CBFC1B3F4AF00F0048864A180198
C7FCA25C5AA780A380A26C7F8181816C8015FC6C14FF16E06C15FEEEFFF06CEEFF8018F8
6CEFFF806D17F86D17FE6D717E1AE06D18F80103846D18FF6D856E84021F846E84020384
020084033F83030783150004071780DC003F16C01701DD001F15E01801726C14F0191F73
14F81903857314FCA286861CFE86A386A900104F13FC1218121E001F61EA3FC001F04E13
F801FC95B5FC13FF02C04C14F002F016074801FE4C14E0DAFFC0153F03FC4AB612C0DBFF
F0131F93B91280A2BD120063636C62001F620007620001626C6C61010F4EC7FC010318F8
D9007F17E0020F1780020004FCC8FC030F15E0DB001F01F8C9FC578179FD65>I[<0203B5
7EB3B0BC12F8B0C700070280CAFCB3B3B3B3A483A4831B046E180C71153E1B7E71EC01FE
711407F21FFF6E02FF91B5FCF0C01F95B7FC6E1980A3811CC0811C806F18001BFC6F17F0
6F17C06F4CC7FC6F16F86F16C07002FCC8FC041F14C0040301E0C9FC>82
158 123 282 95 I<B500F84DB512F0B3B3B3B3AE62A362A362A262A262626E94B6FC61
6C606E5E616E163F6F5D6C02E00203B7FC03F8140FDBFF8090B8FC93B75A6C61626C19E0
626C616C4E5A19F86C18E06C18806D4CC7FC011F16F86D16C0010303FCCBFCD9007F14C0
020701F0CCFC5C7C6BF887>I<003FB500C0071FB512C06C646F4F14806C6E96B612006C
6E636C6E4E5C6C636C6E4E5C6F636D6E4D5C6D6E4D5C6D626D6E62704D91C7FC6D6E94B5
5A6D4F5C6D806D6E4C5C6E6D4C5C714B5C6E636E6E5D6E6E4B5C6E6E4B91C8FC656E6E92
B55A6E6E5C6E6E4A5C6F6D5F6F4C5C725B6F6E495C6F6E5E6F4C91C9FC6F6E495B7290B5
FC6F6E5D6F6E485C704A5C706D485C70148707CF5C7002DF5C7091B6CAFC705E8263705E
715D715D8363715D7192CBFC715C83715C62725B8695B57E4D805F4D80874D814D815F4D
818794B77E4C824C02CF7F198F4C0207804C6E804C496C804C01FC81854C496D7F93B548
6D7F4B4A814B707F4E7F4B4A824B70804B91C76C804B496E80894B498092B5486F7F4A4A
6F7F894A4A6F804A4A814A72804A4A8494C96C804A72804A5B91B5487080494A717F767F
494A86494A71804986494A71804C864991CB6C8049748090B55A4B728048767F484A7314
80484A1CC0487614E04B85484A7314F0484A1CF8487614FCB6CD6C14FE777980F878>
120 D E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: A4

%%EndSetup
%%Page: 1 1
1 0 bop 833 1805 a Fm(Texts)42 b(in)g(Computing)1487
2160 y Fl(V)-6 b(olume)43 b(5)717 3181 y Fm(Bridges)f(from)g(Classical)
p eop
%%Page: 2 2
2 1 bop 522 2632 a Fk(V)n(olume)41 b(1)522 2732 y(Programming)f
(Languages)g(and)h(Op)r(erational)g(Semantics)522 2832
y(Ma)n(rib)r(el)g(F)n(ern)o(\023)-41 b(andez)522 2969
y(V)n(olume)41 b(2)522 3068 y(An)h(Intro)r(duction)e(to)h(Lamb)r(da)h
(Calculi)e(fo)n(r)i(Computer)f(Scientists)522 3168 y(Chris)h(Hankin)522
3305 y(V)n(olume)f(3)522 3404 y(Logical)f(Reasoning:)49
b(A)42 b(First)f(Course)522 3504 y(Rob)g(Nederp)r(elt)g(and)g(F)n
(airouz)g(Kama)n(reddine)522 3641 y(V)n(olume)g(4)522
3741 y(The)g(Hask)n(ell)f(Road)g(to)h(Logic,)f(Maths)h(and)g
(Programming)522 3840 y(Kees)g(Do)r(ets)g(and)g(Jan)h(van)f(Eijck)522
3977 y(V)n(olume)g(5)522 4077 y(Bridges)g(from)h(Classical)e(to)h
(Nonmonotonic)e(Logic)522 4176 y(David)i(Makinson)522
4313 y(V)n(olume)g(6)522 4413 y(Lea)n(rn)g(Prolog)g(No)n(w!)522
4513 y(P)n(atrick)g(Blackburn,)g(Johan)g(Bos)g(and)g(Kristina)g
(Striegnitz)522 4986 y(T)-7 b(exts)41 b(in)g(Computing)f(Series)i
(Edito)n(r)522 5086 y(Ian)f(Mackie,)g(King's)f(College)g(London)p
eop
%%Page: 3 3
3 2 bop 717 2194 a Fm(Bridges)42 b(from)g(Classical)1202
3222 y Fl(David)g(Makinson)1320 3434 y Fj(King's)f(College)f(London)p
eop
%%Page: 4 4
4 3 bop 545 3369 a Fi(c)522 3372 y Fh(\015)42 b Fk(Individual)e(autho)n
(r)h(and)g(King's)g(College)f(2005.)49 b(All)41 b(rights)g(reserved.)
522 3584 y(ISBN)h(1-904987-00-1)522 3684 y(King's)e(College)g
(Publications)522 3783 y(Scienti\014c)g(Directo)n(r:)51
b(Dov)41 b(Gabba)n(y)522 3883 y(Managing)f(Directo)n(r:)50
b(Jane)41 b(Spurr)522 3983 y(Depa)n(rtment)g(of)g(Computer)g(Science)
522 4082 y(Strand,)h(London)e(W)n(C2R)h(2LS,)g(UK)522
4182 y(k)n(cp@dcs.k)n(cl.ac.uk)522 4456 y(Cover)h(design)e(b)n(y)h
(Richa)n(rd)g(F)n(raser,)h(www.avalona)n(rts.co.uk)522
4555 y(Printed)f(b)n(y)h(Lightning)e(Source,)h(Milton)f(Keynes,)h(UK)
522 4852 y Fg(All)53 b(rights)h(reserved.)86 b(No)53
b(pa)n(rt)i(of)e(this)h(publication)h(ma)n(y)d(b)r(e)i(rep)n(ro)r
(duced,)59 b(sto)n(red)c(in)f(a)522 4931 y(retrieval)40
b(system)g(o)n(r)g(transmitted,)h(in)f(any)g(fo)n(rm,)e(o)n(r)j(b)n(y)e
(any)h(means,)f(electronic,)j(mechanical,)522 5010 y(photo)r(cop)n
(ying,)53 b(reco)n(rding)d(o)n(r)f(otherwise,)i(without)g(p)n(rio)n(r)e
(p)r(ermission,)h(in)e(writing,)j(from)c(the)522 5089
y(publisher.)p eop
%%Page: 5 5
5 4 bop 1568 1366 a Ff(CONTENTS)522 1931 y Fi(PREF)-6
b(A)m(CE)2274 b(vii)522 2114 y(Pref)o(ace)2380 b(vii)522
2213 y(Ackno)n(wledgements)45 b(.)c(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g
(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)
g(.)g(.)120 b(ix)522 2313 y(Purpose)63 b(.)41 b(.)h(.)f(.)g(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)
f(.)g(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)120 b(ix)522
2495 y(CHAPTER)42 b(1)82 b(INTR)m(ODUCTION)1506 b(1)522
2595 y(1)149 b(W)-7 b(e)42 b(Are)f(All)h(Nonmonotonic)109
b(.)41 b(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)g(.)
h(.)f(.)g(.)g(.)143 b(1)p eop
%%Page: 6 6
6 5 bop eop
%%Page: 7 7
7 6 bop 1625 1419 a Ff(PREF)-9 b(A)k(CE)522 2058 y Fe(Who)41
b(ar)n(e)h(we)g(writing)g(f)n(or?)522 2201 y Fi(This)33
b(book)f(is)i(directed)e(to)i(all)f(those)g(who)g(ha)n(v)o(e)f(heard)h
(of)f(nonmonotonic)e(reasoning)522 2301 y(and)45 b(w)o(ould)g(lik)o(e)h
(to)g(get)g(a)g(better)g(idea)f(of)h(what)g(it)g(is)h(all)f(about.)59
b(What)46 b(are)g(its)522 2401 y(dri)n(ving)41 b(ideas?)51
b(In)42 b(what)g(w)o(ays)h(does)f(it)i(dif)n(fer)d(from)h(classical)h
(logic?)50 b(Ho)n(w)42 b(does)522 2500 y(it)k(relate)g(to)g
(probability?)57 b(More)45 b(generally)-5 b(,)44 b(ho)n(w)h(does)h(it)g
(beha)n(v)o(e)e(and)h(ho)n(w)g(can)522 2600 y(it)j(be)e(used?)63
b(W)-7 b(e)48 b(will)g(try)e(to)h(answer)g(these)g(questions)e(as)j
(clearly)e(as)i(possible,)522 2700 y(without)41 b(undue)f(technicality)
g(on)i(the)f(one)g(hand,)g(nor)g(v)n(agueness)f(or)h(hand)g(w)o(a)n
(ving)522 2799 y(on)g(the)g(other)-5 b(.)522 3024 y Fe(What)42
b(does)f(the)i(r)n(eader)f(need)h(to)f(kno)o(w)g(alr)n(eady?)522
3168 y Fi(T)-7 b(ackling)42 b(a)g(subject)h(such)f(as)h(this)g(does)f
(require)f(a)i(minimal)f(background,)d(and)j(in)522 3268
y(honesty)35 b(we)i(must)f(mak)o(e)g(it)h(clear)f(from)f(the)h(be)o
(ginning)e(what)i(is)h(needed.)43 b(T)-7 b(o)36 b(those)522
3367 y(without)47 b(an)o(y)f(grounding)e(in)k(classical)g(logic)f(at)g
(all,)j(who)c(may)h(out)g(of)g(curiosity)522 3467 y(ha)n(v)o(e)35
b(pick)o(ed)f(up)h(the)h(v)n(olume,)f(we)h(say:)44 b(put)35
b(it)h(do)n(wn,)f(and)g(go)g(to)h(square)e(one.)44 b(Get)522
3567 y(the)54 b(rudiments)e(of)h(classical)i(propositional)c(logic)j
(\(alias)g(truth-functional)c(logic\))522 3666 y(under)41
b(your)f(belt,)i(and)g(then)f(come)h(back.)48 b(Otherwise)42
b(you)f(will)h(be)g(lik)o(e)g(someone)522 3766 y(trying)50
b(to)g(learn)g(about)g(algebra)f(before)h(kno)n(wing)e(an)o(y)i
(arithmetic,)i(counterpoint)522 3866 y(without)40 b(sol-f)o(a,)h(or)f
(style)i(without)e(the)h(elements)g(of)f(grammar)-5 b(.)522
4091 y Fe(Main)42 b(themes)522 4235 y Fi(From)i(the)g(outside,)g
(nonmonotonic)c(logic)j(is)i(often)f(seen)g(as)h(a)f(rather)f
(mysterious)522 4334 y(af)n(f)o(air)-5 b(.)81 b(Ev)o(en)52
b(from)g(the)h(inside,)i(it)f(can)f(appear)e(to)i(lack)g(unity)-5
b(,)55 b(with)e(multiple)522 4434 y(systems)39 b(proposed)d(by)h(as)i
(man)o(y)e(authors)g(going)g(in)h(dif)n(ferent)f(directions.)43
b(The)38 b(fe)n(w)522 4533 y(a)n(v)n(ailable)j(te)o(xtbooks)e(tend)h
(to)h(perpetuate)f(this)h(impression.)522 4759 y Fe(T)-9
b(opics)42 b(Not)f(Dealt)h(W)n(ith)522 4902 y Fi(W)-7
b(e)48 b(o)n(we)f(it)h(to)g(the)f(reader)f(\227)i(and)e(especially)h
(to)h(the)f(instructor)f(who)g(may)h(be)522 5002 y(thinking)e(of)i
(using)f(the)h(book)e(\227)j(to)e(say)i(clearly)e(what)h(topics,)g
(associated)g(with)522 5102 y(nonmonotonic)37 b(reasoning,)i(are)i
Fd(not)h Fi(co)o(v)o(ered.)1836 5312 y(vii)p eop
%%Page: 8 8
8 7 bop 522 818 a Fi(viii)2251 b Fc(PREF)-6 b(A)m(CE)522
1051 y Fe(Strategy)42 b(of)g(Pr)n(esentation)522 1184
y Fi(When)c(the)g(author)f(\002rst)i(be)o(gan)e(planning)f(this)j(te)o
(xt,)f(he)g(follo)n(wed)f(engrained)f(habits)522 1283
y(and)58 b(sought)f(for)h(maximal)g(generality)-5 b(.)96
b(`W)-7 b(e)59 b(ha)n(v)o(e)f(a)n(v)n(ailable)g(a)h(multitude)e(of)522
1383 y(dif)n(ferent)51 b(formal)g(approaches)f(to)j(nonmonotonic)c
(reasoning',)k(he)f(thought.)78 b(`So)522 1483 y(in)58
b(order)e(to)i(put)g(some)f(order)g(into)g(the)h(af)n(f)o(air)m(,)j(we)
d(need)f(to)h(\002nd)f(the)h(most)522 1582 y(general)37
b(schema)h(possible,)h(under)e(which)h(the)o(y)f(all)i(f)o(all.)46
b(W)-7 b(e)39 b(can)f(then)g(present)g(the)522 1682 y(dif)n(ferent)h
(accounts)h(as)i(so)f(man)o(y)f(special)h(cases)h(of)e(the)h(general)f
(schema'.)522 1881 y Fe(Re)o(view)h(and)h(explor)n(e)g(sections)522
2014 y Fi(Each)47 b(chapter)g(ends)g(with)h(a)g(`Re)n(vie)n(w)f(and)g
(e)o(xplore')f(section.)65 b(It)48 b(contains)f(three)522
2113 y(packages)d(to)h(help)g(the)g(reader)f(re)n(vie)n(w)g(the)h
(material)g(co)o(v)o(ered)d(and)j(to)g(go)g(further)522
2213 y(into)50 b(the)g(literature.)71 b(First,)53 b(a)d
Fd(r)m(ecapitulation)e Fi(of)i(the)f(essential)i(message)f(of)f(the)522
2313 y(chapter)-5 b(.)47 b(Second,)40 b(a)i Fd(c)o(hec)n(klist)h
Fi(of)f(the)f(k)o(e)o(y)g(concepts,)g(both)f(formal)h(and)g(informal,)
522 2412 y(that)k(were)g(introduced)d(there.)57 b(The)44
b(concepts)g(are)h(not)g(e)o(xplained)e(all)i(o)o(v)o(er)e(again,)522
2512 y(b)n(ut)56 b(are)g(simply)f(listed)h(for)g(checking)e(of)n(f)h
(at)h(re)n(vie)n(w)f(time.)91 b(The)56 b(reader)e(can)522
2612 y(relocate)41 b(the)g(formal)g(de\002nitions)g(and)g(informal)f(e)
o(xplanations)f(by)i(looking)f(for)h(the)522 2711 y(corresponding)50
b(italicised)55 b(terms)e(in)h(the)g(main)g(te)o(xt.)84
b(Third,)56 b(a)e(short)f(selection)522 2811 y(of)j(te)o(xts)g(for)f
Fd(further)h(r)m(eading)p Fi(.)89 b(Some)55 b(of)h(these)g(co)o(v)o(er)
e(essentially)i(the)g(same)522 2910 y(ground)38 b(as)j(the)g(section)f
(itself,)h(albeit)f(from)g(a)g(dif)n(ferent)f(angle,)h(in)g(more)g
(detail)g(or)522 3010 y(with)49 b(particular)f(attention)g(to)h
(aspects)g(that)g(we)g(ha)n(v)o(e)f(not)h(dwelt)g(on.)69
b(Some)49 b(go)522 3110 y(further)-5 b(.)69 b(In)49 b(general,)h(these)
g(will)g(be)f(`bite)g(size')g(\227)h(short)f(papers)f(or)h(chapters.)
522 3209 y(Occasionally)-5 b(,)39 b(a)j(more)e(e)o(xtended)f(te)o(xt)i
(is)h(mentioned.)522 3408 y Fe(What)g(is)f(the)h(best)g(way)f(to)g(r)n
(ead)i(this)e(book?)522 3541 y Fi(Do)f(it)i(pencil)d(in)i(hand;)f
(scribble)f(in)i(the)f(mar)o(gins.)k(T)-7 b(ak)o(e)41
b(nothing)d(on)i(f)o(aith;)h(check)522 3641 y(out)j(the)g(assertions;)h
(\002nd)f(errors)f(\(and)h(communicate)e(them)h(to)h(the)g(author\);)g
(pose)522 3741 y(questions.)522 3940 y Fe(F)n(or)d(the)h(instructor)522
4072 y Fi(The)f(author')-5 b(s)40 b(e)o(xperience)g(is)i(that)f(in)h(a)
g(graduate)e(class,)i(teaching)e(can)h(tak)o(e)g(place)522
4172 y(at)50 b(a)n(v)o(erage)d(of)i(one)g(section)f(per)h(hour)m(,)g
(without)f(counting)g(section)g(1.1)h(and)f(the)522 4272
y(brief)j(`re)n(vie)n(w)g(and)h(e)o(xplore')e(sections.)79
b(This)52 b(adds)g(up)f(to)i(about)e(20)g(hours)g(of)522
4371 y(instruction)34 b(time)h(for)g(the)g(entire)f(book,)h(or)g(about)
f(15)h(hours)f(for)g(a)i(minimal)e(v)o(ersion)522 4471
y(lik)o(e)41 b(the)g(one)g(mentioned)e(abo)o(v)o(e.)522
4670 y Fe(Con)l(v)o(entions)522 4803 y Fi(Theorems)45
b(are)h(numbered)e(by)i(their)h(section,)g(follo)n(wed)e(by)h(a)h(dash)
f(and)g(a)h(digit.)522 4902 y(F)o(or)i(e)o(xample,)i(the)e(\002rst)i(e)
o(xplicitly)d(displayed)h(theorem)f(in)i(the)g(book)e(occurs)h(in)522
5002 y(section)43 b(1.3)f(and)h(is)h(numbered)d(Theorem)g
Fb(??)o Fi(.)53 b(Ho)n(we)n(v)o(er)m(,)42 b(only)g(major)h(results)g
(are)522 5102 y(displayed)k(and)g(numbered)e(in)j(this)g(w)o(ay)-5
b(.)66 b(Man)o(y)47 b(lesser)h(f)o(acts)h(are)e(simply)h(stated)p
eop
%%Page: 9 9
9 8 bop 522 818 a Fc(A)m(CKLNO)m(WLEDGEMENTS)1679 b Fi(ix)522
1051 y(in)43 b(the)g(\003o)n(w)g(of)g(the)g(te)o(xt,)g(and)f(the)h
(attenti)n(v)o(e)g(reader)e(should)h(mark)h(them)f(as)i(the)o(y)522
1151 y(are)55 b(found.)86 b(The)55 b(same)g(applies)g(to)g
(de\002nitions.)87 b(Only)55 b(a)g(fe)n(w)g(k)o(e)o(y)f(ones)h(are)522
1250 y(gi)n(v)o(en)37 b(special)i(display;)f(the)h(others)e(are)i
(within)f(the)g(te)o(xt,)h(with)f(their)g(central)g(terms)522
1350 y(italicized.)522 1541 y Fe(Ackno)o(wledgements)522
1670 y Fi(As)33 b(the)f(basic)h(ideas)f(underlying)e(this)i(book)f
(were)h(de)n(v)o(eloped,)g(the)o(y)f(were)h(articulated)522
1770 y(in)61 b(w)o(orkshop)e(and)h(conference)e(presentations,)64
b(journal)59 b(publications,)64 b(and)c(the)522 1869
y(classroom.)522 2060 y Fe(Pur)o(pose)522 2190 y Fi(This)67
b(o)o(v)o(ervie)n(w)d(is)k(directed)e(to)g(those)h(who)f(ha)n(v)o(e)g
(heard)g(of)g(nonmonotonic)522 2290 y(reasoning)38 b(and)i(w)o(ould)f
(lik)o(e)h(to)g(get)g(a)g(better)g(idea)g(of)f(what)h(it)h(is)g(all)f
(about.)45 b(What)522 2389 y(are)52 b(its)i(dri)n(ving)d(ideas?)80
b(In)53 b(what)f(w)o(ays)h(does)f(it)h(dif)n(fer)f(from)f(classical)j
(logic?)522 2489 y(Ho)n(w)42 b(does)f(it)h(relate)g(to)g(probability?)k
(More)41 b(generally)-5 b(,)39 b(ho)n(w)i(does)h(it)g(beha)n(v)o(e)f
(and)522 2588 y(ho)n(w)46 b(can)g(it)g(be)g(used?)61
b(W)-7 b(e)48 b(will)e(try)g(to)h(answer)e(these)i(questions)e(as)i
(clearly)e(as)522 2688 y(possible,)37 b(without)f(undue)g(technicality)
f(on)i(the)f(one)h(hand,)f(nor)g(v)n(agueness)g(or)g(hand)522
2788 y(w)o(a)n(ving)k(on)h(the)g(other)-5 b(.)p eop
%%Page: 10 10
10 9 bop 522 818 a Fi(x)2310 b Fc(PURPOSE)p eop
%%Page: 0 11
0 10 bop eop
%%Page: 1 12
1 11 bop 1608 1051 a Fa(CHAPTER)42 b(1)1431 1438 y Ff(INTR)-5
b(ODUCTION)522 1956 y Fe(1)99 b(W)-6 b(e)41 b(Ar)n(e)h(All)f
(Nonmonotonic)522 2093 y Fi(This)67 b(o)o(v)o(ervie)n(w)d(is)k
(directed)e(to)g(those)h(who)f(ha)n(v)o(e)g(heard)g(of)g(nonmonotonic)
522 2192 y(reasoning)38 b(and)i(w)o(ould)f(lik)o(e)h(to)g(get)g(a)g
(better)g(idea)g(of)f(what)h(it)h(is)g(all)f(about.)45
b(What)522 2292 y(are)52 b(its)i(dri)n(ving)d(ideas?)80
b(In)53 b(what)f(w)o(ays)h(does)f(it)h(dif)n(fer)f(from)f(classical)j
(logic?)522 2392 y(Ho)n(w)42 b(does)f(it)h(relate)g(to)g(probability?)k
(More)41 b(generally)-5 b(,)39 b(ho)n(w)i(does)h(it)g(beha)n(v)o(e)f
(and)522 2491 y(ho)n(w)46 b(can)g(it)g(be)g(used?)61
b(W)-7 b(e)48 b(will)e(try)g(to)h(answer)e(these)i(questions)e(as)i
(clearly)e(as)522 2591 y(possible,)37 b(without)f(undue)g(technicality)
f(on)i(the)f(one)h(hand,)f(nor)g(v)n(agueness)g(or)g(hand)522
2690 y(w)o(a)n(ving)k(on)h(the)g(other)-5 b(.)617 2795
y(This)57 b(o)o(v)o(ervie)n(w)e(is)j(directed)e(to)i(those)f(who)f(ha)n
(v)o(e)h(heard)f(of)h(nonmonotonic)522 2895 y(reasoning)38
b(and)i(w)o(ould)f(lik)o(e)h(to)g(get)g(a)g(better)g(idea)g(of)f(what)h
(it)h(is)g(all)f(about.)45 b(What)522 2994 y(are)52 b(its)i(dri)n(ving)
d(ideas?)80 b(In)53 b(what)f(w)o(ays)h(does)f(it)h(dif)n(fer)f(from)f
(classical)j(logic?)522 3094 y(Ho)n(w)42 b(does)f(it)h(relate)g(to)g
(probability?)k(More)41 b(generally)-5 b(,)39 b(ho)n(w)i(does)h(it)g
(beha)n(v)o(e)f(and)522 3194 y(ho)n(w)46 b(can)g(it)g(be)g(used?)61
b(W)-7 b(e)48 b(will)e(try)g(to)h(answer)e(these)i(questions)e(as)i
(clearly)e(as)522 3293 y(possible,)37 b(without)f(undue)g(technicality)
f(on)i(the)f(one)h(hand,)f(nor)g(v)n(agueness)g(or)g(hand)522
3393 y(w)o(a)n(ving)k(on)h(the)g(other)-5 b(.)617 3498
y(This)57 b(o)o(v)o(ervie)n(w)e(is)j(directed)e(to)i(those)f(who)f(ha)n
(v)o(e)h(heard)f(of)h(nonmonotonic)522 3597 y(reasoning)38
b(and)i(w)o(ould)f(lik)o(e)h(to)g(get)g(a)g(better)g(idea)g(of)f(what)h
(it)h(is)g(all)f(about.)45 b(What)522 3697 y(are)52 b(its)i(dri)n(ving)
d(ideas?)80 b(In)53 b(what)f(w)o(ays)h(does)f(it)h(dif)n(fer)f(from)f
(classical)j(logic?)522 3796 y(Ho)n(w)42 b(does)f(it)h(relate)g(to)g
(probability?)k(More)41 b(generally)-5 b(,)39 b(ho)n(w)i(does)h(it)g
(beha)n(v)o(e)f(and)522 3896 y(ho)n(w)46 b(can)g(it)g(be)g(used?)61
b(W)-7 b(e)48 b(will)e(try)g(to)h(answer)e(these)i(questions)e(as)i
(clearly)e(as)522 3996 y(possible,)37 b(without)f(undue)g(technicality)
f(on)i(the)f(one)h(hand,)f(nor)g(v)n(agueness)g(or)g(hand)522
4095 y(w)o(a)n(ving)k(on)h(the)g(other)-5 b(.)617 4200
y(This)57 b(o)o(v)o(ervie)n(w)e(is)j(directed)e(to)i(those)f(who)f(ha)n
(v)o(e)h(heard)f(of)h(nonmonotonic)522 4300 y(reasoning)38
b(and)i(w)o(ould)f(lik)o(e)h(to)g(get)g(a)g(better)g(idea)g(of)f(what)h
(it)h(is)g(all)f(about.)45 b(What)522 4399 y(are)52 b(its)i(dri)n(ving)
d(ideas?)80 b(In)53 b(what)f(w)o(ays)h(does)f(it)h(dif)n(fer)f(from)f
(classical)j(logic?)522 4499 y(Ho)n(w)42 b(does)f(it)h(relate)g(to)g
(probability?)k(More)41 b(generally)-5 b(,)39 b(ho)n(w)i(does)h(it)g
(beha)n(v)o(e)f(and)522 4599 y(ho)n(w)46 b(can)g(it)g(be)g(used?)61
b(W)-7 b(e)48 b(will)e(try)g(to)h(answer)e(these)i(questions)e(as)i
(clearly)e(as)522 4698 y(possible,)37 b(without)f(undue)g(technicality)
f(on)i(the)f(one)h(hand,)f(nor)g(v)n(agueness)g(or)g(hand)522
4798 y(w)o(a)n(ving)k(on)h(the)g(other)-5 b(.)617 4902
y(This)57 b(o)o(v)o(ervie)n(w)e(is)j(directed)e(to)i(those)f(who)f(ha)n
(v)o(e)h(heard)f(of)h(nonmonotonic)522 5002 y(reasoning)38
b(and)i(w)o(ould)f(lik)o(e)h(to)g(get)g(a)g(better)g(idea)g(of)f(what)h
(it)h(is)g(all)f(about.)45 b(What)522 5102 y(are)52 b(its)i(dri)n(ving)
d(ideas?)80 b(In)53 b(what)f(w)o(ays)h(does)f(it)h(dif)n(fer)f(from)f
(classical)j(logic?)1860 5312 y(1)p eop
%%Page: 2 13
2 12 bop 522 818 a Fi(2)2310 b Fc(PURPOSE)522 1051 y
Fi(Ho)n(w)42 b(does)f(it)h(relate)g(to)g(probability?)k(More)41
b(generally)-5 b(,)39 b(ho)n(w)i(does)h(it)g(beha)n(v)o(e)f(and)522
1151 y(ho)n(w)46 b(can)g(it)g(be)g(used?)61 b(W)-7 b(e)48
b(will)e(try)g(to)h(answer)e(these)i(questions)e(as)i(clearly)e(as)522
1250 y(possible,)37 b(without)f(undue)g(technicality)f(on)i(the)f(one)h
(hand,)f(nor)g(v)n(agueness)g(or)g(hand)522 1350 y(w)o(a)n(ving)k(on)h
(the)g(other)-5 b(.)617 1460 y(This)57 b(o)o(v)o(ervie)n(w)e(is)j
(directed)e(to)i(those)f(who)f(ha)n(v)o(e)h(heard)f(of)h(nonmonotonic)
522 1560 y(reasoning)38 b(and)i(w)o(ould)f(lik)o(e)h(to)g(get)g(a)g
(better)g(idea)g(of)f(what)h(it)h(is)g(all)f(about.)45
b(What)522 1660 y(are)52 b(its)i(dri)n(ving)d(ideas?)80
b(In)53 b(what)f(w)o(ays)h(does)f(it)h(dif)n(fer)f(from)f(classical)j
(logic?)522 1759 y(Ho)n(w)42 b(does)f(it)h(relate)g(to)g(probability?)k
(More)41 b(generally)-5 b(,)39 b(ho)n(w)i(does)h(it)g(beha)n(v)o(e)f
(and)522 1859 y(ho)n(w)46 b(can)g(it)g(be)g(used?)61
b(W)-7 b(e)48 b(will)e(try)g(to)h(answer)e(these)i(questions)e(as)i
(clearly)e(as)522 1958 y(possible,)37 b(without)f(undue)g(technicality)
f(on)i(the)f(one)h(hand,)f(nor)g(v)n(agueness)g(or)g(hand)522
2058 y(w)o(a)n(ving)k(on)h(the)g(other)-5 b(.)617 2169
y(This)57 b(o)o(v)o(ervie)n(w)e(is)j(directed)e(to)i(those)f(who)f(ha)n
(v)o(e)h(heard)f(of)h(nonmonotonic)522 2268 y(reasoning)38
b(and)i(w)o(ould)f(lik)o(e)h(to)g(get)g(a)g(better)g(idea)g(of)f(what)h
(it)h(is)g(all)f(about.)45 b(What)522 2368 y(are)52 b(its)i(dri)n(ving)
d(ideas?)80 b(In)53 b(what)f(w)o(ays)h(does)f(it)h(dif)n(fer)f(from)f
(classical)j(logic?)522 2468 y(Ho)n(w)42 b(does)f(it)h(relate)g(to)g
(probability?)k(More)41 b(generally)-5 b(,)39 b(ho)n(w)i(does)h(it)g
(beha)n(v)o(e)f(and)522 2567 y(ho)n(w)46 b(can)g(it)g(be)g(used?)61
b(W)-7 b(e)48 b(will)e(try)g(to)h(answer)e(these)i(questions)e(as)i
(clearly)e(as)522 2667 y(possible,)37 b(without)f(undue)g(technicality)
f(on)i(the)f(one)h(hand,)f(nor)g(v)n(agueness)g(or)g(hand)522
2766 y(w)o(a)n(ving)k(on)h(the)g(other)-5 b(.)617 2877
y(This)57 b(o)o(v)o(ervie)n(w)e(is)j(directed)e(to)i(those)f(who)f(ha)n
(v)o(e)h(heard)f(of)h(nonmonotonic)522 2977 y(reasoning)38
b(and)i(w)o(ould)f(lik)o(e)h(to)g(get)g(a)g(better)g(idea)g(of)f(what)h
(it)h(is)g(all)f(about.)45 b(What)522 3076 y(are)52 b(its)i(dri)n(ving)
d(ideas?)80 b(In)53 b(what)f(w)o(ays)h(does)f(it)h(dif)n(fer)f(from)f
(classical)j(logic?)522 3176 y(Ho)n(w)42 b(does)f(it)h(relate)g(to)g
(probability?)k(More)41 b(generally)-5 b(,)39 b(ho)n(w)i(does)h(it)g
(beha)n(v)o(e)f(and)522 3276 y(ho)n(w)46 b(can)g(it)g(be)g(used?)61
b(W)-7 b(e)48 b(will)e(try)g(to)h(answer)e(these)i(questions)e(as)i
(clearly)e(as)522 3375 y(possible,)37 b(without)f(undue)g(technicality)
f(on)i(the)f(one)h(hand,)f(nor)g(v)n(agueness)g(or)g(hand)522
3475 y(w)o(a)n(ving)k(on)h(the)g(other)-5 b(.)617 3585
y(This)57 b(o)o(v)o(ervie)n(w)e(is)j(directed)e(to)i(those)f(who)f(ha)n
(v)o(e)h(heard)f(of)h(nonmonotonic)522 3685 y(reasoning)38
b(and)i(w)o(ould)f(lik)o(e)h(to)g(get)g(a)g(better)g(idea)g(of)f(what)h
(it)h(is)g(all)f(about.)45 b(What)522 3785 y(are)52 b(its)i(dri)n(ving)
d(ideas?)80 b(In)53 b(what)f(w)o(ays)h(does)f(it)h(dif)n(fer)f(from)f
(classical)j(logic?)522 3884 y(Ho)n(w)42 b(does)f(it)h(relate)g(to)g
(probability?)k(More)41 b(generally)-5 b(,)39 b(ho)n(w)i(does)h(it)g
(beha)n(v)o(e)f(and)522 3984 y(ho)n(w)46 b(can)g(it)g(be)g(used?)61
b(W)-7 b(e)48 b(will)e(try)g(to)h(answer)e(these)i(questions)e(as)i
(clearly)e(as)522 4084 y(possible,)37 b(without)f(undue)g(technicality)
f(on)i(the)f(one)h(hand,)f(nor)g(v)n(agueness)g(or)g(hand)522
4183 y(w)o(a)n(ving)k(on)h(the)g(other)-5 b(.)617 4294
y(This)57 b(o)o(v)o(ervie)n(w)e(is)j(directed)e(to)i(those)f(who)f(ha)n
(v)o(e)h(heard)f(of)h(nonmonotonic)522 4393 y(reasoning)38
b(and)i(w)o(ould)f(lik)o(e)h(to)g(get)g(a)g(better)g(idea)g(of)f(what)h
(it)h(is)g(all)f(about.)45 b(What)522 4493 y(are)52 b(its)i(dri)n(ving)
d(ideas?)80 b(In)53 b(what)f(w)o(ays)h(does)f(it)h(dif)n(fer)f(from)f
(classical)j(logic?)522 4593 y(Ho)n(w)42 b(does)f(it)h(relate)g(to)g
(probability?)k(More)41 b(generally)-5 b(,)39 b(ho)n(w)i(does)h(it)g
(beha)n(v)o(e)f(and)522 4692 y(ho)n(w)46 b(can)g(it)g(be)g(used?)61
b(W)-7 b(e)48 b(will)e(try)g(to)h(answer)e(these)i(questions)e(as)i
(clearly)e(as)522 4792 y(possible,)37 b(without)f(undue)g(technicality)
f(on)i(the)f(one)h(hand,)f(nor)g(v)n(agueness)g(or)g(hand)522
4892 y(w)o(a)n(ving)k(on)h(the)g(other)-5 b(.)617 5002
y(This)57 b(o)o(v)o(ervie)n(w)e(is)j(directed)e(to)i(those)f(who)f(ha)n
(v)o(e)h(heard)f(of)h(nonmonotonic)522 5102 y(reasoning)38
b(and)i(w)o(ould)f(lik)o(e)h(to)g(get)g(a)g(better)g(idea)g(of)f(what)h
(it)h(is)g(all)f(about.)45 b(What)p eop
%%Page: 3 14
3 13 bop 522 818 a Fc(1.)87 b(WE)42 b(ARE)f(ALL)g(NONMONO)m(T)o(ONIC)
1260 b Fi(3)522 1051 y(are)52 b(its)i(dri)n(ving)d(ideas?)80
b(In)53 b(what)f(w)o(ays)h(does)f(it)h(dif)n(fer)f(from)f(classical)j
(logic?)522 1151 y(Ho)n(w)42 b(does)f(it)h(relate)g(to)g(probability?)k
(More)41 b(generally)-5 b(,)39 b(ho)n(w)i(does)h(it)g(beha)n(v)o(e)f
(and)522 1250 y(ho)n(w)46 b(can)g(it)g(be)g(used?)61
b(W)-7 b(e)48 b(will)e(try)g(to)h(answer)e(these)i(questions)e(as)i
(clearly)e(as)522 1350 y(possible,)37 b(without)f(undue)g(technicality)
f(on)i(the)f(one)h(hand,)f(nor)g(v)n(agueness)g(or)g(hand)522
1449 y(w)o(a)n(ving)k(on)h(the)g(other)-5 b(.)617 1560
y(This)57 b(o)o(v)o(ervie)n(w)e(is)j(directed)e(to)i(those)f(who)f(ha)n
(v)o(e)h(heard)f(of)h(nonmonotonic)522 1660 y(reasoning)38
b(and)i(w)o(ould)f(lik)o(e)h(to)g(get)g(a)g(better)g(idea)g(of)f(what)h
(it)h(is)g(all)f(about.)45 b(What)522 1759 y(are)52 b(its)i(dri)n(ving)
d(ideas?)80 b(In)53 b(what)f(w)o(ays)h(does)f(it)h(dif)n(fer)f(from)f
(classical)j(logic?)522 1859 y(Ho)n(w)42 b(does)f(it)h(relate)g(to)g
(probability?)k(More)41 b(generally)-5 b(,)39 b(ho)n(w)i(does)h(it)g
(beha)n(v)o(e)f(and)522 1958 y(ho)n(w)46 b(can)g(it)g(be)g(used?)61
b(W)-7 b(e)48 b(will)e(try)g(to)h(answer)e(these)i(questions)e(as)i
(clearly)e(as)522 2058 y(possible,)37 b(without)f(undue)g(technicality)
f(on)i(the)f(one)h(hand,)f(nor)g(v)n(agueness)g(or)g(hand)522
2158 y(w)o(a)n(ving)k(on)h(the)g(other)-5 b(.)617 2268
y(This)57 b(o)o(v)o(ervie)n(w)e(is)j(directed)e(to)i(those)f(who)f(ha)n
(v)o(e)h(heard)f(of)h(nonmonotonic)522 2368 y(reasoning)38
b(and)i(w)o(ould)f(lik)o(e)h(to)g(get)g(a)g(better)g(idea)g(of)f(what)h
(it)h(is)g(all)f(about.)45 b(What)522 2468 y(are)52 b(its)i(dri)n(ving)
d(ideas?)80 b(In)53 b(what)f(w)o(ays)h(does)f(it)h(dif)n(fer)f(from)f
(classical)j(logic?)522 2567 y(Ho)n(w)42 b(does)f(it)h(relate)g(to)g
(probability?)k(More)41 b(generally)-5 b(,)39 b(ho)n(w)i(does)h(it)g
(beha)n(v)o(e)f(and)522 2667 y(ho)n(w)46 b(can)g(it)g(be)g(used?)61
b(W)-7 b(e)48 b(will)e(try)g(to)h(answer)e(these)i(questions)e(as)i
(clearly)e(as)522 2766 y(possible,)37 b(without)f(undue)g(technicality)
f(on)i(the)f(one)h(hand,)f(nor)g(v)n(agueness)g(or)g(hand)522
2866 y(w)o(a)n(ving)k(on)h(the)g(other)-5 b(.)617 2977
y(This)57 b(o)o(v)o(ervie)n(w)e(is)j(directed)e(to)i(those)f(who)f(ha)n
(v)o(e)h(heard)f(of)h(nonmonotonic)522 3076 y(reasoning)38
b(and)i(w)o(ould)f(lik)o(e)h(to)g(get)g(a)g(better)g(idea)g(of)f(what)h
(it)h(is)g(all)f(about.)45 b(What)522 3176 y(are)52 b(its)i(dri)n(ving)
d(ideas?)80 b(In)53 b(what)f(w)o(ays)h(does)f(it)h(dif)n(fer)f(from)f
(classical)j(logic?)522 3276 y(Ho)n(w)42 b(does)f(it)h(relate)g(to)g
(probability?)k(More)41 b(generally)-5 b(,)39 b(ho)n(w)i(does)h(it)g
(beha)n(v)o(e)f(and)522 3375 y(ho)n(w)46 b(can)g(it)g(be)g(used?)61
b(W)-7 b(e)48 b(will)e(try)g(to)h(answer)e(these)i(questions)e(as)i
(clearly)e(as)522 3475 y(possible,)37 b(without)f(undue)g(technicality)
f(on)i(the)f(one)h(hand,)f(nor)g(v)n(agueness)g(or)g(hand)522
3574 y(w)o(a)n(ving)k(on)h(the)g(other)-5 b(.)617 3685
y(This)57 b(o)o(v)o(ervie)n(w)e(is)j(directed)e(to)i(those)f(who)f(ha)n
(v)o(e)h(heard)f(of)h(nonmonotonic)522 3785 y(reasoning)38
b(and)i(w)o(ould)f(lik)o(e)h(to)g(get)g(a)g(better)g(idea)g(of)f(what)h
(it)h(is)g(all)f(about.)45 b(What)522 3884 y(are)52 b(its)i(dri)n(ving)
d(ideas?)80 b(In)53 b(what)f(w)o(ays)h(does)f(it)h(dif)n(fer)f(from)f
(classical)j(logic?)522 3984 y(Ho)n(w)42 b(does)f(it)h(relate)g(to)g
(probability?)k(More)41 b(generally)-5 b(,)39 b(ho)n(w)i(does)h(it)g
(beha)n(v)o(e)f(and)522 4084 y(ho)n(w)46 b(can)g(it)g(be)g(used?)61
b(W)-7 b(e)48 b(will)e(try)g(to)h(answer)e(these)i(questions)e(as)i
(clearly)e(as)522 4183 y(possible,)37 b(without)f(undue)g(technicality)
f(on)i(the)f(one)h(hand,)f(nor)g(v)n(agueness)g(or)g(hand)522
4283 y(w)o(a)n(ving)k(on)h(the)g(other)-5 b(.)617 4393
y(This)57 b(o)o(v)o(ervie)n(w)e(is)j(directed)e(to)i(those)f(who)f(ha)n
(v)o(e)h(heard)f(of)h(nonmonotonic)522 4493 y(reasoning)38
b(and)i(w)o(ould)f(lik)o(e)h(to)g(get)g(a)g(better)g(idea)g(of)f(what)h
(it)h(is)g(all)f(about.)45 b(What)522 4593 y(are)52 b(its)i(dri)n(ving)
d(ideas?)80 b(In)53 b(what)f(w)o(ays)h(does)f(it)h(dif)n(fer)f(from)f
(classical)j(logic?)522 4692 y(Ho)n(w)42 b(does)f(it)h(relate)g(to)g
(probability?)k(More)41 b(generally)-5 b(,)39 b(ho)n(w)i(does)h(it)g
(beha)n(v)o(e)f(and)522 4792 y(ho)n(w)46 b(can)g(it)g(be)g(used?)61
b(W)-7 b(e)48 b(will)e(try)g(to)h(answer)e(these)i(questions)e(as)i
(clearly)e(as)522 4892 y(possible,)37 b(without)f(undue)g(technicality)
f(on)i(the)f(one)h(hand,)f(nor)g(v)n(agueness)g(or)g(hand)522
4991 y(w)o(a)n(ving)k(on)h(the)g(other)-5 b(.)617 5102
y(This)57 b(o)o(v)o(ervie)n(w)e(is)j(directed)e(to)i(those)f(who)f(ha)n
(v)o(e)h(heard)f(of)h(nonmonotonic)p eop
%%Page: 4 15
4 14 bop 522 818 a Fi(4)2310 b Fc(PURPOSE)522 1051 y
Fi(reasoning)38 b(and)i(w)o(ould)f(lik)o(e)h(to)g(get)g(a)g(better)g
(idea)g(of)f(what)h(it)h(is)g(all)f(about.)45 b(What)522
1151 y(are)52 b(its)i(dri)n(ving)d(ideas?)80 b(In)53
b(what)f(w)o(ays)h(does)f(it)h(dif)n(fer)f(from)f(classical)j(logic?)
522 1250 y(Ho)n(w)42 b(does)f(it)h(relate)g(to)g(probability?)k(More)41
b(generally)-5 b(,)39 b(ho)n(w)i(does)h(it)g(beha)n(v)o(e)f(and)522
1350 y(ho)n(w)46 b(can)g(it)g(be)g(used?)61 b(W)-7 b(e)48
b(will)e(try)g(to)h(answer)e(these)i(questions)e(as)i(clearly)e(as)522
1449 y(possible,)37 b(without)f(undue)g(technicality)f(on)i(the)f(one)h
(hand,)f(nor)g(v)n(agueness)g(or)g(hand)522 1549 y(w)o(a)n(ving)k(on)h
(the)g(other)-5 b(.)617 1649 y(This)57 b(o)o(v)o(ervie)n(w)e(is)j
(directed)e(to)i(those)f(who)f(ha)n(v)o(e)h(heard)f(of)h(nonmonotonic)
522 1748 y(reasoning)38 b(and)i(w)o(ould)f(lik)o(e)h(to)g(get)g(a)g
(better)g(idea)g(of)f(what)h(it)h(is)g(all)f(about.)45
b(What)522 1848 y(are)52 b(its)i(dri)n(ving)d(ideas?)80
b(In)53 b(what)f(w)o(ays)h(does)f(it)h(dif)n(fer)f(from)f(classical)j
(logic?)522 1948 y(Ho)n(w)42 b(does)f(it)h(relate)g(to)g(probability?)k
(More)41 b(generally)-5 b(,)39 b(ho)n(w)i(does)h(it)g(beha)n(v)o(e)f
(and)522 2047 y(ho)n(w)46 b(can)g(it)g(be)g(used?)61
b(W)-7 b(e)48 b(will)e(try)g(to)h(answer)e(these)i(questions)e(as)i
(clearly)e(as)522 2147 y(possible,)37 b(without)f(undue)g(technicality)
f(on)i(the)f(one)h(hand,)f(nor)g(v)n(agueness)g(or)g(hand)522
2246 y(w)o(a)n(ving)k(on)h(the)g(other)-5 b(.)617 2346
y(This)57 b(o)o(v)o(ervie)n(w)e(is)j(directed)e(to)i(those)f(who)f(ha)n
(v)o(e)h(heard)f(of)h(nonmonotonic)522 2446 y(reasoning)38
b(and)i(w)o(ould)f(lik)o(e)h(to)g(get)g(a)g(better)g(idea)g(of)f(what)h
(it)h(is)g(all)f(about.)45 b(What)522 2545 y(are)52 b(its)i(dri)n(ving)
d(ideas?)80 b(In)53 b(what)f(w)o(ays)h(does)f(it)h(dif)n(fer)f(from)f
(classical)j(logic?)522 2645 y(Ho)n(w)42 b(does)f(it)h(relate)g(to)g
(probability?)k(More)41 b(generally)-5 b(,)39 b(ho)n(w)i(does)h(it)g
(beha)n(v)o(e)f(and)522 2745 y(ho)n(w)46 b(can)g(it)g(be)g(used?)61
b(W)-7 b(e)48 b(will)e(try)g(to)h(answer)e(these)i(questions)e(as)i
(clearly)e(as)522 2844 y(possible,)37 b(without)f(undue)g(technicality)
f(on)i(the)f(one)h(hand,)f(nor)g(v)n(agueness)g(or)g(hand)522
2944 y(w)o(a)n(ving)k(on)h(the)g(other)-5 b(.)617 3043
y(This)57 b(o)o(v)o(ervie)n(w)e(is)j(directed)e(to)i(those)f(who)f(ha)n
(v)o(e)h(heard)f(of)h(nonmonotonic)522 3143 y(reasoning)38
b(and)i(w)o(ould)f(lik)o(e)h(to)g(get)g(a)g(better)g(idea)g(of)f(what)h
(it)h(is)g(all)f(about.)45 b(What)522 3243 y(are)52 b(its)i(dri)n(ving)
d(ideas?)80 b(In)53 b(what)f(w)o(ays)h(does)f(it)h(dif)n(fer)f(from)f
(classical)j(logic?)522 3342 y(Ho)n(w)42 b(does)f(it)h(relate)g(to)g
(probability?)k(More)41 b(generally)-5 b(,)39 b(ho)n(w)i(does)h(it)g
(beha)n(v)o(e)f(and)522 3442 y(ho)n(w)46 b(can)g(it)g(be)g(used?)61
b(W)-7 b(e)48 b(will)e(try)g(to)h(answer)e(these)i(questions)e(as)i
(clearly)e(as)522 3542 y(possible,)37 b(without)f(undue)g(technicality)
f(on)i(the)f(one)h(hand,)f(nor)g(v)n(agueness)g(or)g(hand)522
3641 y(w)o(a)n(ving)k(on)h(the)g(other)-5 b(.)617 3741
y(This)57 b(o)o(v)o(ervie)n(w)e(is)j(directed)e(to)i(those)f(who)f(ha)n
(v)o(e)h(heard)f(of)h(nonmonotonic)522 3840 y(reasoning)38
b(and)i(w)o(ould)f(lik)o(e)h(to)g(get)g(a)g(better)g(idea)g(of)f(what)h
(it)h(is)g(all)f(about.)45 b(What)522 3940 y(are)52 b(its)i(dri)n(ving)
d(ideas?)80 b(In)53 b(what)f(w)o(ays)h(does)f(it)h(dif)n(fer)f(from)f
(classical)j(logic?)522 4040 y(Ho)n(w)42 b(does)f(it)h(relate)g(to)g
(probability?)k(More)41 b(generally)-5 b(,)39 b(ho)n(w)i(does)h(it)g
(beha)n(v)o(e)f(and)522 4139 y(ho)n(w)46 b(can)g(it)g(be)g(used?)61
b(W)-7 b(e)48 b(will)e(try)g(to)h(answer)e(these)i(questions)e(as)i
(clearly)e(as)522 4239 y(possible,)37 b(without)f(undue)g(technicality)
f(on)i(the)f(one)h(hand,)f(nor)g(v)n(agueness)g(or)g(hand)522
4339 y(w)o(a)n(ving)k(on)h(the)g(other)-5 b(.)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
